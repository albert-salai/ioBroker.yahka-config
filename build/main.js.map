{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["import * as utils\t\t\t\t\tfrom '@iobroker/adapter-core';\nimport { sprintf }\t\t\t\t\tfrom 'sprintf-js';\nimport mqtt \t\t\t\t\t\tfrom 'mqtt';\nimport { diff as deepDiff }\t\t\tfrom 'deep-diff';\n// state roles:\t\t\t\t\t\tsee https://www.iobroker.net/#en/documentation/dev/stateroles.md\n// homekit services:\t\t\t\tsee https://github.com/homebridge/HAP-NodeJS/blob/latest/src/lib/definitions/ServiceDefinitions.ts\n// homekit characteristics:\t\t\tsee https://github.com/homebridge/HAP-NodeJS/blob/latest/src/lib/definitions/CharacteristicDefinitions.ts\n\n// SrvCharacteristic\ninterface SrvCharacteristic {\n\tname:\t\t\t\t\tstring,\n\tenabled?:\t\t\t\tboolean,\n\tinOutFunction:\t\t\tstring,\n\tinOutParameters:\t\tstring | boolean | number,\n\tconversionFunction?:\tstring,\n\tconversionParameters?:\t{ toHomeKit?: string, toIOBroker?: string },\n}\n\n// AccService\ninterface AccService {\n\ttype:\t\t\t\t\tstring,\n\tsubType:\t\t\t\tstring,\n\tname:\t\t\t\t\tstring,\n\tcharacteristics:\t\tSrvCharacteristic[]\n}\n\n// AccConfig\ninterface AccConfig {\n\tname:\t\t\t\t\tstring,\n\tcategory:\t\t\t\tstring,\n\tservices:\t\t\t\tAccService[],\n\tgroupString:\t\t\tstring\n\tconfigType?:\t\t\tstring,\n\tmanufacturer?:\t\t\tstring,\n\tmodel?:\t\t\t\t\tstring,\n\tserial?:\t\t\t\tstring,\n\tfirmware?:\t\t\t\tstring,\n\tavailableState?:\t\tstring,\n\tenabled?:\t\t\t\tboolean,\n}\n\n// ZigbeeFeature\ninterface ZigbeeFeature {\n\taccess:\t\t\t\t\tnumber,\n\tdescription?:\t\t\tstring,\n\tlabel:\t\t\t\t\tstring,\n\tname:\t\t\t\t\tstring,\n\ttype:\t\t\t\t\t'binary' | 'numeric' | 'enum' | 'composite',\n\tfeatures?:\t\t\t\tZigbeeFeature[],\n};\n\n// ZigbeeFeatures\ninterface ZigbeeFeatures {\n\ttype:\t\t\t\t\t'light' | 'composite';\t\t// | 'switch' | 'lock' | 'list' | 'text' | 'cover' | 'fan' | 'climate',\n\tfeatures:\t\t\t\tZigbeeFeature[],\n};\n\n// ZigbeeDevice\n//\t\tsee https://github.com/Koenkk/zigbee2mqtt/blob/master/lib/extension/bridge.ts#L812\ninterface ZigbeeDevice {\n\tieee_address:\t\t\tstring,\n\ttype:\t\t\t\t\t'EndDevice' | 'Router',\n\tnetwork_address:\t\tnumber,\n\tsupported:\t\t\t\tboolean,\n\tfriendly_name:\t\t\tstring,\n\tdisabled:\t\t\t\tboolean,\n\t//\tsee https://github.com/Koenkk/zigbee2mqtt/blob/master/lib/extension/bridge.ts#L876\n\tdefinition: {\n\t\tmodel:\t\t\t\tstring,\n\t\tvendor:\t\t\t\tstring,\n\t\tdescription:\t\tstring,\n\t\texposes:\t\t\t(ZigbeeFeatures | ZigbeeFeature)[],\n\t\tsupports_ota:\t\tboolean,\n\t\toptions:\t\t\tRecord<string, any>[],\n\t\ticon?:\t\t\t\tstring,\n\t},\n\tpower_source:\t\t\t'Battery' | 'Mains (single phase)',\n\tsoftware_build_id?:\t\tstring,\n\tmodel_id:\t\t\t\tstring,\n\tinterviewing:\t\t\tboolean,\n\tinterview_completed:\tboolean,\n\tmanufacturer:\t\t\tstring,\n\tendpoints:\t\t\t\tRecord<string, any>[],\n};\n\n\n// ~~~~~~~~\n// AccCatId\n// ~~~~~~~~\n// see iobroker.yahka/io-package.json: objects.native\nconst AccCatId = {\n\t'AIRPORT':\t\t\t\t'27',\n\t'AIR_CONDITIONER':\t\t'21',\n\t'AIR_DEHUMIDIFIER':\t\t'23',\n\t'AIR_HEATER':\t\t\t'20',\n\t'AIR_HUMIDIFIER':\t\t'22',\n\t'AIR_PURIFIER':\t\t\t'19',\n\t'APPLE_TV':\t\t\t\t'24',\n\t'AUDIO_RECEIVER':\t\t'34',\n\t'Alarm_system':\t\t\t'11',\n\t'Bridge':\t\t\t\t'2',\n\t'Camera':\t\t\t\t'17',\n\t'Door':\t\t\t\t\t'12',\n\t'Door_lock':\t\t\t'6',\n\t'FAUCET':\t\t\t\t'29',\n\t'Fan':\t\t\t\t\t'3',\n\t'Garage_door_opener':\t'4',\n\t'HOMEPOD':\t\t\t\t'25',\n\t'Lightbulb':\t\t\t'5',\n\t'Other':\t\t\t\t'1',\n\t'Outlet':\t\t\t\t'7',\n\t'Programmable_switch':\t'15',\n\t'ROUTER':\t\t\t\t'33',\n\t'Range_extender':\t\t'16',\n\t'SHOWER_HEAD':\t\t\t'30',\n\t'SPEAKER':\t\t\t\t'26',\n\t'SPRINKLER':\t\t\t'28',\n\t'Sensor':\t\t\t\t'10',\n\t'Switch':\t\t\t\t'8',\n\t'TARGET_CONTROLLER':\t'32',\n\t'TELEVISION':\t\t\t'31',\n\t'TV_SET_TOP_BOX':\t\t'35',\n\t'TV_STREAMING_STIC':\t'36',\n\t'Thermostat':\t\t\t'9',\n\t'VIDEO_DOORBELL':\t\t'18',\n\t'Window':\t\t\t\t'13',\n\t'Window_covering':\t\t'14'\n};\n\n\n// ~~~~~~~~~~~\n// YahkaConfig\n// ~~~~~~~~~~~\nclass YahkaConfig extends utils.Adapter {\n\tprivate historyId = '';\n\n\t// CONSTRUCTOR\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: 'yahka-config',\n\t\t});\n\t\tthis.on('ready',  this.onReady .bind(this));\n\t\tthis.on('unload', this.onUnload.bind(this));\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void> {\n\t\tconst mapping = this.config.mapping;\n\t\tthis.log.info(sprintf('%-31s %-20s %-50s', 'onReady()', 'mapping', '\\n'+JSON.stringify(mapping, null, 4)));\n\n\t\t// historyId\n\t\tconst systemConfig = await this.getForeignObjectAsync('system.config');\n\t\tif (systemConfig) {\n\t\t\tthis.historyId = systemConfig.common.defaultHistory || '';\n\t\t}\n\n\t\t// yahka dstId\n\t\tfor (const [ dstId, srcIdsObj ] of Object.entries(mapping)) {\n\t\t\tconst yahkaDst = await this.getForeignObjectAsync('system.adapter.' + dstId);\n\t\t\tif (! yahkaDst) {\n\t\t\t\tthis.log.warn(sprintf('%-31s %-20s %-50s', 'onReady()', ('system.adapter.'+dstId), 'not installed'));\n\t\t\t\tdelete mapping[dstId];\n\n\t\t\t} else {\n\t\t\t\t// oldDevs\t\t-\t\tyahka adapter uses 'name' to build homekit UUID\n\t\t\t\tconst oldDevs: AccConfig[] = yahkaDst['native']['bridge']['devices'];\n\n\t\t\t\t// createdDevs\n\t\t\t\tlet createdDevs: AccConfig[] = [];\n\t\t\t\tconst srcInstIds = Object.entries(srcIdsObj).filter(entry => (entry[1] === true)).map(entry => entry[0]).sort();\n\t\t\t\tfor (const srcInstId of srcInstIds.sort()) {\n\t\t\t\t\tconst adapter = srcInstId.split('.')[0];\n\t\t\t\t\tif\t\t(adapter === 'danfoss-icon'\t)\t{ createdDevs = createdDevs.concat(await this.create_danfoss\t(srcInstId, yahkaDst)); }\n\t\t\t\t\telse if (adapter === 'fritzdect'\t)\t{ createdDevs = createdDevs.concat(await this.create_fritzdect\t(srcInstId, yahkaDst)); }\n\t\t\t\t\telse if (adapter === 'rpi-io'\t\t)\t{ createdDevs = createdDevs.concat(await this.create_by_role\t(srcInstId, yahkaDst)); }\n\t\t\t\t\telse if (adapter === 'shelly'\t\t)\t{ createdDevs = createdDevs.concat(await this.create_shelly\t\t(srcInstId, yahkaDst)); }\n\t\t\t\t\telse if (adapter === 'switchboard-io')\t{ createdDevs = createdDevs.concat(await this.create_by_role\t(srcInstId, yahkaDst)); }\n\t\t\t\t\telse if (adapter === 'tr-064'\t\t)\t{ createdDevs = createdDevs.concat(await this.create_tr064\t\t(srcInstId, yahkaDst)); }\n\t\t\t\t\telse if (adapter === 'zigbee2mqtt'\t)\t{ createdDevs = createdDevs.concat(await this.create_zigbee2mqtt(srcInstId, yahkaDst)); }\n\t\t\t\t}\n\n\t\t\t\t// enable all characteristics\n\t\t\t\tfor (const createdDev of createdDevs) {\n\t\t\t\t\t// defaults\n\t\t\t\t\tObject.assign(createdDev, {\n\t\t\t\t\t\t'configType':\t\t'customdevice',\n\t\t\t\t\t\t'manufacturer':\t\t'n/a',\t\t\t\t// visible within iOS home app\n\t\t\t\t\t\t'model':\t\t\t'n/a',\t\t\t\t// visible within iOS home app\n\t\t\t\t\t\t'serial':\t\t\t'n/a',\t\t\t\t// visible within iOS home app\n\t\t\t\t\t\t'firmware':\t\t\t'n/a',\t\t\t\t// visible within iOS home app\n\t\t\t\t\t\t'enabled':\t\t\ttrue,\n\t\t\t\t\t}, createdDev);\n\t\t\t\t\tfor (const service of createdDev.services) {\n\t\t\t\t\t\tfor (const characteristic of service.characteristics) {\n\t\t\t\t\t\t\tcharacteristic.enabled = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add newDev if existing yahkaOldDevs\n\t\t\t\tconst newDevs: AccConfig[] = [];\n\t\t\t\tfor (const oldDev of oldDevs) {\n\t\t\t\t\tconst createdDev = createdDevs.find((createdDev) => (createdDev.name === oldDev.name));\n\t\t\t\t\tif (createdDev) {\n\t\t\t\t\t\tcreatedDev.enabled = oldDev.enabled ?? false;\n\t\t\t\t\t\tif (! createdDev.enabled) {\n\t\t\t\t\t\t\tcreatedDev.groupString = '~disabled~'\n\t\t\t\t\t\t\tthis.log.info(sprintf('%-31s %-20s %-30s', 'createYahkaConfig()', 'disabled', createdDev.name));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewDevs.push(createdDev);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewDevs.push(Object.assign({}, oldDev, {\n\t\t\t\t\t\t\tenabled:\t\tfalse,\n\t\t\t\t\t\t\tgroupString:\t'~obsolete~'\n\t\t\t\t\t\t}));\n\t\t\t\t\t\tthis.log.info(sprintf('%-31s %-20s %-30s', 'createYahkaConfig()', 'obsolete', oldDev.name));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add createdDev if not existing in oldDevs\n\t\t\t\tfor (const createdDev of createdDevs) {\n\t\t\t\t\tif (! oldDevs.find((oldDev) => (oldDev.name === createdDev.name))) {\n\t\t\t\t\t\tnewDevs.push(createdDev);\n\t\t\t\t\t\tthis.log.info(sprintf('%-31s %-20s %-30s', 'createYahkaConfig()', 'added', createdDev.name));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//this.log.info(sprintf('%-31s %-20s\\n%s', 'createYahkaConfig()', 'oldDevs', JSON.stringify(oldDevs, null, 4)));\n\t\t\t\t//this.log.info(sprintf('%-31s %-20s\\n%s', 'createYahkaConfig()', 'newDevs', JSON.stringify(newDevs, null, 4)));\n\n\t\t\t\t// get diffs between oldDevs and newDevs\n\t\t\t\tconst diffs = deepDiff(oldDevs, newDevs);\n\t\t\t\tfor (const diff of (diffs ?? [])) {\n\t\t\t\t\tif (diff.path) {\n\t\t\t\t\t\tconst pathStr = diff.path.map((val) => (typeof val === 'number' ? `[${val}]` : `.${val}`)).join('');\n\t\t\t\t\t\tif (diff.kind === 'N') {\n\t\t\t\t\t\t\tthis.log.info(sprintf('%-31s %-20s %-30s %s', 'createYahkaConfig()', 'added', pathStr, JSON.stringify(diff.rhs)));\n\n\t\t\t\t\t\t} else if (diff.kind === 'D') {\n\t\t\t\t\t\t\tthis.log.info(sprintf('%-31s %-20s %-30s %s', 'createYahkaConfig()', 'deleted', pathStr, JSON.stringify(diff.lhs)));\n\n\t\t\t\t\t\t} else if (diff.kind === 'E') {\n\t\t\t\t\t\t\tthis.log.info(sprintf('%-31s %-20s %-30s %-20s --> %-10s', 'createYahkaConfig()', 'edited', pathStr, JSON.stringify(diff.lhs), JSON.stringify(diff.rhs)));\n\n\t\t\t\t\t\t} else if (diff.kind === 'A') {\n\t\t\t\t\t\t\tthis.log.info(sprintf('%-31s %-20s %-30s %s', 'createYahkaConfig()', 'changed', pathStr, JSON.stringify(diff.item)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// save\n\t\t\t\tif (diffs) {\n\t\t\t\t\tthis.log.info(sprintf('%-31s %-20s %-50s %s', 'createYahkaConfig()', dstId, 'saving yahka devices ...', ''));\n\t\t\t\t\tyahkaDst['native']['bridge']['devices'] = newDevs;\n\t\t\t\t\tawait this.setForeignObject('system.adapter.' + dstId, yahkaDst);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// stop until next schedule\n\t\tthis.terminate('yahka config updated. adapter stopped until next scheduled moment');\n\t}\n\n\n\t/**\n\t *\n\t * @param srcInstId\n\t * @param _yahkaDstApt\n\t * @returns\n\t */\n\tprivate async create_tr064(srcInstId: string, _yahkaDstApt: ioBroker.Object): Promise<AccConfig[]> {\n\t\tconst accConfigs: AccConfig[] = [];\n\n\t\t// collect source state objects\n\t\tconst stateObjs  = await this.getForeignObjectsAsync(`${srcInstId}.states.*`, 'state') || {};\n\t\tfor (const state of Object.values(stateObjs).sort(sortBy('_id'))) {\n\t\t\tconst idPath = state._id.split('.');\t\t\t// [ 'tr-064', '0', 'states', 'wps' ]\n\t\t\tif (state.common.type === 'boolean'  &&  ! [ 'wlan', 'wlan24', 'wlan50' ].includes(idPath.slice(-1)[0] || '')) {\n\n\t\t\t\tconst accConfig = {\n\t\t\t\t\t'category':\t\t\tAccCatId['Switch'],\n\t\t\t\t\t'name':\t\t\t\tstate._id,\t\t\t\t\t\t\t\t// NOTE: yahka adapter uses 'name' to build homekit UUID!\n\t\t\t\t\t'manufacturer':\t\tidPath.slice(0,2).join('.'),\t\t\t// visible within iOS home app\n\t\t\t\t\t'serial':\t\t\tidPath.slice(2  ).join('.'),\t\t\t// visible within iOS home app\n\t\t\t\t\t'model':\t\t\tstate.common.name.toString(),\t\t\t// visible within iOS home app\n\t\t\t\t\t'services':\t\t\t[] as AccService[],\n\t\t\t\t\t'groupString':\t\tidPath.slice(0,2).join('.')\t\t\t\t// used by adapter only\n\t\t\t\t};\n\t\t\t\taccConfigs.push(accConfig);\n\n\t\t\t\tconst accService: AccService = {\n\t\t\t\t\t'type': 'Switch', 'subType': '', 'name': accConfig.model,\n\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t{ 'name': 'Name',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': accConfig.model\t},\n\t\t\t\t\t\t{ 'name': 'On',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': state._id\t}\n\t\t\t\t\t]\n\t\t\t\t};\n\t\t\t\taccConfig.services.push(accService);\n\t\t\t\tthis.log.debug(sprintf('%-30s %-20s %-50s %s', 'create_tr064()', accService.type, accConfig.name, accService.name));\n\t\t\t}\n\t\t}\n\n\t\treturn accConfigs;\n\t}\n\n\n\t/**\n\t *\n\t * @param srcInstId\n\t * @param _yahkaDstApt\n\t * @returns\n\t */\n\tprivate async create_fritzdect(srcInstId: string, _yahkaDstApt: ioBroker.Object): Promise<AccConfig[]> {\n\t\tconst accConfigs: AccConfig[] = [];\n\n\t\t// fritzdect channels\n\t\tconst channels = await this.getForeignObjectsAsync(`${srcInstId}.*`, 'channel');\n\t\tfor (const channel of Object.values(channels)) {\n\t\t\tconst productname = await this.getForeignStateAsync(`${channel._id}.productname`);\n\t\t\tif (productname) {\n\t\t\t\t// accCategory, srvType, characteristics\n\t\t\t\tlet accCategory\t= '';\n\t\t\t\tlet srvType\t\t= '';\n\t\t\t\tconst characteristics: SrvCharacteristic[] = [];\n\n\t\t\t\t// FRITZ!DECT Repeater 100\n\t\t\t\tif (productname.val === 'FRITZ!DECT Repeater 100') {\n\t\t\t\t\taccCategory = AccCatId['Sensor'];\n\t\t\t\t\tsrvType\t\t= 'TemperatureSensor';\n\t\t\t\t\tcharacteristics.push({\n\t\t\t\t\t\t'name': 'CurrentTemperature', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${channel._id}.celsius`\n\t\t\t\t\t});\n\t\t\t\t\tawait this.enableHistory(`${channel._id}.celsius`);\n\n\t\t\t\t// FRITZ!Smart Energy 200\n\t\t\t\t} else if (productname.val === 'FRITZ!Smart Energy 200') {\n\t\t\t\t\taccCategory = AccCatId['Switch'];\n\t\t\t\t\tsrvType\t\t= 'Switch';\n\t\t\t\t\tcharacteristics.push({\n\t\t\t\t\t\t'name': 'On', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${channel._id}.state`\n\t\t\t\t\t});\n\t\t\t\t\tawait this.enableHistory(`${channel._id}.state`);\n\n\t\t\t\t// FRITZ!Smart Thermo 301\n\t\t\t\t} else if (productname.val === 'FRITZ!Smart Thermo 301') {\n\t\t\t\t\taccCategory = AccCatId['Thermostat'];\n\t\t\t\t\tsrvType\t\t= 'Thermostat';\n\t\t\t\t\tcharacteristics.push(\n\t\t\t\t\t\t{ 'name': 'TemperatureDisplayUnits',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': '0', \t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t{ 'name': 'TargetTemperature',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': channel._id+'.tsoll'\t\t\t\t\t},\n\t\t\t\t\t\t{ 'name': 'CurrentTemperature',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': channel._id+'.tist'\t\t\t\t\t},\n\t\t\t\t\t\t{ 'name': 'TargetHeatingCoolingState',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': 3\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t{ 'name': 'CurrentHeatingCoolingState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': channel._id+'.heatingCoolingState'\t},\n\t\t\t\t\t);\t\t\t\t\t\t\t\t\t\t\t\t\t\t// TargetHeatingCoolingState:\t0 := OFF, 1 := HEAT, 2 := COOL, 3 := AUTO\n\t\t\t\t\tawait this.enableHistory(`${channel._id}.tsoll`);\t\t// CurrentHeatingCoolingState:\t0 := OFF, 1 := HEAT, 2 := COOL\n\t\t\t\t\tawait this.enableHistory(`${channel._id}.tist` );\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.log.error(sprintf('%-30s %-20s %-50s', 'create_fritzdect()', 'unknown', 'productname', productname.val));\n\t\t\t\t}\n\n\t\t\t\t// add devConfig\n\t\t\t\tif (! accCategory) {\n\t\t\t\t\tthis.log.error(sprintf('%-30s %-20s %-50s %s', 'create_fritzdect()', 'missing', 'accCategory', productname.val));\n\n\t\t\t\t} else if (! srvType) {\n\t\t\t\t\tthis.log.error(sprintf('%-30s %-20s %-50s %s', 'create_fritzdect()', 'missing', 'srvType', productname.val));\n\n\t\t\t\t} else {\n\t\t\t\t\tconst idPath\t= channel._id.split('.');\t\t// [ 'fritzdect', '0', '0.DECT_099950049519' ]\n\t\t\t\t\tconst grpName\t= idPath.slice(0, 2).join('.');\n\t\t\t\t\tconst devName\t= '' + (await this.getForeignStateAsync(`${channel._id}.name`) ?? { 'val': 'unkonw' }).val;\n\n\t\t\t\t\t// add Name characteristic\n\t\t\t\t\tcharacteristics.push({\n\t\t\t\t\t\t'name': 'Name', 'inOutFunction': 'const', 'inOutParameters': devName\n\t\t\t\t\t});\n\n\t\t\t\t\t// accConfig\n\t\t\t\t\tconst manufacturer\t= await this.getForeignStateAsync(`${channel._id}.manufacturer`);\n\t\t\t\t\tconst fwversion\t\t= await this.getForeignStateAsync(`${channel._id}.fwversion`);\n\t\t\t\t\tconst accConfig: AccConfig = {\n\t\t\t\t\t\t'groupString':\t\tgrpName,\t\t\t\t// used by adapter only\n\t\t\t\t\t\t'name':\t\t\t\tdevName,\t\t\t\t// NOTE: yahka adapter uses 'name' to build homekit UUID!\n\t\t\t\t\t\t'category':\t\t\taccCategory,\n\t\t\t\t\t\t'model':\t\t\t'' +  productname.val,\t\t\t\t\t\t\t\t\t\t// visible within iOS home app\n\t\t\t\t\t\t'manufacturer':\t\t'' + (manufacturer?.val ? manufacturer.val : 'n/a'),\t\t// visible within iOS home app\n\t\t\t\t\t\t'firmware':\t\t\t'' + (fwversion?.val ? fwversion.val : 'n/a'),\t\t\t\t// visible within iOS home app\n\t\t\t\t\t\t'serial':\t\t\tidPath[2] || '',\t\t\t\t\t\t\t\t\t\t\t// visible within iOS home app\n\t\t\t\t\t\t'services':\t\t\t[],\n\t\t\t\t\t};\n\t\t\t\t\taccConfigs.push(accConfig);\n\n\t\t\t\t\t// accService\n\t\t\t\t\tconst accService: AccService = {\n\t\t\t\t\t\t'type': srvType, 'subType': '', 'name': devName, 'characteristics':\tcharacteristics\n\t\t\t\t\t};\n\t\t\t\t\taccConfig.services.push(accService);\n\t\t\t\t\tthis.log.debug(sprintf('%-30s %-20s %-50s %s', 'create_fritzdect()', accService.type, accConfig.name, accService.name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn accConfigs;\n\t}\n\n\t/**\n\t *\n\t * @param srcInstId\n\t * @param _yahkaDstApt\n\t * @returns\n\t */\n\tprivate async create_shelly(srcInstId: string, _yahkaDstApt: ioBroker.Object): Promise<AccConfig[]> {\n\t\tconst accConfigs: AccConfig[] = [];\n\n\t\t// collect source state objects\n\t\tconst lightChannels\t= await this.getForeignObjectsAsync(`${srcInstId}.*.lights`, 'channel') || {};\n\t\tconst relayChannels\t= await this.getForeignObjectsAsync(`${srcInstId}.*.Relay*`, 'channel') || {};\n\t\tconst channels\t\t= Object.values(lightChannels).concat(Object.values(relayChannels)).sort(sortBy('_id'));\n\n\t\t// channels\n\t\tfor (const channel of channels) {\n\t\t\tconst idPath\t= channel._id.split('.');\t\t\t\t\t// [ 'shelly', '0', 'SHDM-2#94B97E16BE61#1',\t'lights' ]\n\t\t\tconst name\t= channel.common.name.toString();\t\t\t\t// [ 'shelly', '0', 'SHPLG-S#6A0761#1',\t\t\t'Relay0' ]\n\n\t\t\t// accCategory, srvType, characteristics\n\t\t\tlet accCategory\t\t\t\t\t\t\t\t= '';\t\t\t//accCatIds[expose.type]\n\t\t\tlet srvType\t\t\t\t\t\t\t\t\t= '';\n\t\t\tconst characteristics: SrvCharacteristic[]\t= [];\n\n\t\t\t// Relay\n\t\t\tif ((idPath[3] || '').startsWith('Relay')) {\n\t\t\t\taccCategory = AccCatId['Switch'];\n\t\t\t\tsrvType\t\t= 'Switch';\n\t\t\t\tcharacteristics.push({\n\t\t\t\t\t'name': 'On', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${channel._id}.Switch`\n\t\t\t\t});\n\n\t\t\t// lights\n\t\t\t} else if (idPath[3] === 'lights') {\n\t\t\t\taccCategory = AccCatId['Lightbulb'];\n\t\t\t\tsrvType\t\t= 'Lightbulb';\n\t\t\t\tcharacteristics.push({\n\t\t\t\t\t'name': 'On', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${channel._id}.Switch`\n\t\t\t\t});\n\t\t\t\tcharacteristics.push({\n\t\t\t\t\t'name': 'Brightness',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${channel._id}.brightness`\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// add devConfig\n\t\t\tif (accCategory  &&  srvType) {\n\t\t\t\t// name\n\t\t\t\tcharacteristics.push({\n\t\t\t\t\t'name': 'Name', 'inOutFunction': 'const', 'inOutParameters': name\n\t\t\t\t});\n\n\t\t\t\t// accConfig\n\t\t\t\tconst accConfig: AccConfig = {\n\t\t\t\t\t'groupString':\t\tsrcInstId,\t\t\t\t// used by adapter only\n\t\t\t\t\t'name':\t\t\t\tname,\t\t\t\t\t// NOTE: yahka adapter uses 'name' to build homekit UUID!\n\t\t\t\t\t'category':\t\t\taccCategory,\n\t\t\t\t\t'manufacturer':\t\t'shelly',\t\t\t\t// visible within iOS home app\n\t\t\t\t\t'serial':\t\t\t`${idPath.slice(2, 4).join('.')}`,\t\t\t\t// visible within iOS home app\n\t\t\t\t\t'availableState':\t`${idPath.slice(0, 3).join('.')}.online`,\n\t\t\t\t\t'services':\t\t\t[],\n\t\t\t\t};\n\t\t\t\taccConfigs.push(accConfig);\n\n\t\t\t\t// accService\n\t\t\t\tconst accService: AccService = {\n\t\t\t\t\t'type': srvType, 'subType': '', 'name': name, 'characteristics':\tcharacteristics\n\t\t\t\t};\n\t\t\t\taccConfig.services.push(accService);\n\t\t\t\tthis.log.debug(sprintf('%-30s %-20s %-50s %s', 'create_shelly()', accService.type, accConfig.name, accService.name));\n\t\t\t}\n\t\t}\n\n\t\treturn accConfigs;\n\t}\n\n\t/**\n\t *\n\t * @param srcInstId\n\t * @param _yahkaDstApt\n\t */\n\tprivate async create_by_role(srcInstId: string, _yahkaDstApt: ioBroker.Object): Promise<AccConfig[]> {\n\t\tconst accConfigs: AccConfig[] = [];\n\n\t\tconst pinObjs = await this.getForeignObjectsAsync(`${srcInstId}.*`, 'state') || {};\n\t\tfor (const pinObj of Object.values(pinObjs).sort(sortBy('_id'))) {\n\t\t\tconst objId\t\t= pinObj._id;\t\t\t\t\t\t\t\t\t//   '0_userdata.0.pin.t\u00FCr_tag'\n\t\t\tconst idPath\t= pinObj._id.split('.');\t\t\t\t\t\t// [ '0_userdata', '0', 'pin', 't\u00FCr_tag' ]\n\t\t\tconst objRole\t= pinObj.common.role;\t\t\t\t\t\t\t// 'value.temperature'\n\t\t\tconst objName\t= pinObj.common.name.toString();\t\t\t\t// 'Haust\u00FCr'\n\n\t\t\t// yahka device config\n\t\t\tconst accConfig: AccConfig = {\n\t\t\t\t'category':\t\t\t'',\n\t\t\t\t'name':\t\t\t\tobjId,\t\t\t\t\t\t\t\t\t// NOTE: yahka adapter uses 'name' to build homekit UUID!\n\t\t\t\t'manufacturer':\t\tidPath.slice(0,2).join('.'),\t\t\t// visible within iOS home app\n\t\t\t\t'serial':\t\t\tidPath.slice(2  ).join('.'),\t\t\t// visible within iOS home app\n\t\t\t\t'model':\t\t\tobjName,\t\t\t\t\t\t\t\t// visible within iOS home app\n\t\t\t\t'services':\t\t\t[],\t\t\t\t\t\t\t\t\t\t// default\n\t\t\t\t'groupString':\t\tidPath.slice(0,2).join('.')\t\t\t\t// used by adapter only\n\t\t\t};\n\n\t\t\t// sensor.contact\n\t\t\tif (objRole === 'sensor.contact') {\n\t\t\t\taccConfig.category = AccCatId['Sensor'];\n\t\t\t\taccConfig.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'ContactSensor', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'ContactSensorState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t// sensor.motion\n\t\t\t} else if (objRole === 'sensor.motion') {\n\t\t\t\taccConfig.category = AccCatId['Sensor'];\n\t\t\t\taccConfig.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'MotionSensor', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'MotionDetected',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t// sensor.occupancy\n\t\t\t} else if (objRole === 'sensor.occupancy') {\n\t\t\t\taccConfig.category = AccCatId['Sensor'];\n\t\t\t\taccConfig.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'OccupancySensor', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'OccupancyDetected',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t// sensor.leak\n\t\t\t} else if (objRole === 'sensor.leak') {\n\t\t\t\taccConfig.category = AccCatId['Sensor'];\n\t\t\t\taccConfig.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'LeakSensor', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'LeakDetected',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t// switch\n\t\t\t} else if (objRole === 'switch') {\n\t\t\t\taccConfig.category = AccCatId['Switch'];\n\t\t\t\taccConfig.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'Switch', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'On',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t\t// switch.light\n\t\t\t} else if (objRole === 'switch.light') {\n\t\t\t\taccConfig.category = AccCatId['Lightbulb'];\n\t\t\t\taccConfig.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'Lightbulb', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'On',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t// switch.lock.door\n\t\t\t} else if (objRole === 'switch.lock.door') {\n\t\t\t\taccConfig.category\t= AccCatId['Door_lock'];\n\t\t\t\taccConfig.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'LockMechanism', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ 'name': 'LockTargetState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId,\t\t\t'conversionFunction': 'invert'\t},\n\t\t\t\t\t\t\t{ 'name': 'LockCurrentState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId+'_status',\t'conversionFunction': 'invert'\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t// switch.garage\n\t\t\t} else if (objRole === 'switch.garage') {\n\t\t\t\taccConfig.category\t= AccCatId['Garage_door_opener'] ;\n\t\t\t\taccConfig.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'GarageDoorOpener', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ 'name': 'TargetDoorState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId,\t\t\t'conversionFunction': 'invert'\t},\n\t\t\t\t\t\t\t{ 'name': 'CurrentDoorState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId+'_status',\t'conversionFunction': 'invert'\t},\n\t\t\t\t\t\t\t{ 'name': 'ObstructionDetected','inOutFunction': 'const',\t\t\t\t\t'inOutParameters': false\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t// switch.fan\n\t\t\t} else if (objRole === 'switch.fan') {\n\t\t\t\taccConfig.category = AccCatId['Fan'];\n\t\t\t\taccConfig.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'Fan', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'On',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t// add accConfig\n\t\t\tif (accConfig.services.length > 0) {\n\t\t\t\taccConfigs.push(accConfig);\n\t\t\t\tfor (const accService of accConfig.services) {\n\t\t\t\t\tthis.log.debug(sprintf('%-30s %-20s %-50s %s', 'create_by_role()', accService.type, accConfig.name, accService.name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn accConfigs;\n\t}\n\n\n\t/**\n\t *\n\t * @param srcInstId\n\t * @param _yahkaDstApt\n\t */\n\tprivate async create_danfoss(srcInstId: string, _yahkaDstApt: ioBroker.Object): Promise<AccConfig[]> {\n\t\tconst accConfigs: AccConfig[] = [];\n\t\tconst group = srcInstId;\t\t\t\t\t\t\t\t\t\t// 'danfoss-icon.0'\n\n\t\t// danfoss-icon HousePause\n\t\tconst housePause = await this.getForeignObjectAsync(`${srcInstId}.House.HousePause`);\n\t\tif (housePause) {\n\t\t\tconst idPath\t= housePause._id.split('.');\t\t\t\t// [ 'danfoss-icon', '0', 'House', 'HousePause' ]\n\t\t\tconst name\t\t= housePause.common.name.toString();\n\n\t\t\tconst accConfig = {\n\t\t\t\t'groupString':\t\tgroup,\t\t\t\t\t\t\t\t// used only by iobroker adapter to group accessiries\n\t\t\t\t'name':\t\t\t\thousePause._id,\t\t\t\t\t\t// NOTE: yahka adapter uses 'name' to build homekit UUID!\n\t\t\t\t'manufacturer':\t\tgroup,\t\t\t\t\t\t\t\t// visible within iOS home app\n\t\t\t\t'model':\t\t\tname,\t\t\t\t\t\t\t\t// visible within iOS home app\n\t\t\t\t'serial':\t\t\tidPath.slice(2).join('.'),\t\t\t// visible within iOS home app\n\t\t\t\t'category':\t\t\tAccCatId['Switch'],\n\t\t\t\t'services':\t\t\t[] as AccService[],\n\t\t\t};\n\t\t\tconst accService: AccService = {\n\t\t\t\t'type': 'Switch', 'subType': '', 'name': accConfig.model,\n\t\t\t\t'characteristics': [\n\t\t\t\t\t{ 'name': 'Name',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': name\t\t\t\t},\n\t\t\t\t\t{ 'name': 'On',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': housePause._id\t}\n\t\t\t\t]\n\t\t\t};\n\t\t\taccConfig.services.push(accService);\n\t\t\taccConfigs.push(accConfig);\n\t\t\tthis.log.debug(sprintf('%-30s %-20s %-50s %s', 'create_danfoss()', accService.type, accConfig.name, accService.name));\n\t\t}\n\n\t\t// TargetTemp\n\t\tconst targetTemps = await this.getForeignObjectsAsync(`${srcInstId}.room-*.TargetTemp`, 'state');\n\t\tfor (const targetTempObj of Object.values(targetTemps).sort(sortBy('_id'))) {\n\t\t\tconst idPath\t= targetTempObj._id.split('.');\t\t\t\t// [ 'danfoss-icon', '0', 'room-01', 'TargetTemp' ]\n\t\t\tconst idBase\t= idPath.slice(0, -1).join('.');\t\t\t//   'danfoss-icon.0.room-01''\n\t\t\tconst name\t\t= targetTempObj.common.name.toString();\n\n\t\t\tconst accConfig = {\n\t\t\t\t'category':\t\t\tAccCatId['Thermostat'],\n\t\t\t\t'name':\t\t\t\ttargetTempObj._id,\t\t\t\t\t// NOTE: yahka adapter uses 'name' to build homekit UUID!\n\t\t\t\t'manufacturer':\t\tgroup,\t\t\t\t\t\t\t\t// visible within iOS home app\n\t\t\t\t'serial':\t\t\tidPath.slice(2).join('.'),\t\t\t// visible within iOS home app\n\t\t\t\t'model':\t\t\tname,\t\t\t\t\t\t\t\t// visible within iOS home app\n\t\t\t\t'services':\t\t\t[] as AccService[],\n\t\t\t\t'groupString':\t\tgroup,\t\t\t\t\t\t\t\t// used by adapter only\n\t\t\t\t'availableState':\t`${group}.House.PeerConnected`,\n\t\t\t};\n\t\t\taccConfigs.push(accConfig);\n\n\t\t\tconst accService: AccService = {\n\t\t\t\t'type': 'Thermostat', 'subType': '', 'name': name,\n\t\t\t\t'characteristics': [\n\t\t\t\t\t{ 'name': 'Name',\t\t\t\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': name\t\t\t\t\t\t},\n\t\t\t\t\t{ 'name': 'TargetTemperature',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': idBase+'.TargetTemp'\t\t},\n\t\t\t\t\t{ 'name': 'CurrentTemperature',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': idBase+'.RoomTemp'\t\t},\n\t\t\t\t\t{ 'name': 'TemperatureDisplayUnits',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': '0', \t\t\t\t\t},\n\t\t\t\t\t{ 'name': 'TargetHeatingCoolingState',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': '3', \t\t\t\t\t},\n\t\t\t\t\t{ 'name': 'CurrentHeatingCoolingState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': idBase+'.ValveState',\n\t\t\t\t\t\t'conversionFunction': 'script', 'conversionParameters': { 'toHomeKit': 'return (value) ? 1 : 2;', 'toIOBroker': 'return (value == 1);' }\n\t\t\t\t\t}\t\t// TargetHeatingCoolingState:\t\t0 := OFF, 1 := HEAT, 2 := COOL, 3 := AUTO\n\t\t\t\t]\t\t\t// CurrentHeatingCoolingState:\t\t0 := OFF, 1 := HEAT, 2 := COOL\n\t\t\t};\n\t\t\taccConfig.services.push(accService);\n\t\t\tthis.log.debug(sprintf('%-30s %-20s %-50s %s', 'create_danfoss()', accService.type, accConfig.name, accService.name));\n\t\t}\n\n\t\treturn accConfigs;\n\t}\n\n\n\t/**\n\t *\n\t * @param srcInstId\n\t * @param _yahkaDstApt\n\t * @returns\n\t */\n\tprivate async create_zigbee2mqtt(srcInstId: string, _yahkaDstApt: ioBroker.Object): Promise<AccConfig[]> {\n\t\tconst accConfigs: AccConfig[] = [];\n\n\t\t// zigbeeDevs\n\t\tconst zigbeeDevs = await new Promise<ZigbeeDevice[]>((resolve, _reject) => {\n\t\t\tconst client = mqtt.connect('mqtt://127.0.0.1:1883');\n\t\t\tclient.on('connect', (_pkt: mqtt.IConnackPacket) => {\n\t\t\t\tclient\n\t\t\t\t\t.on('message', (_topic: string, payload: Buffer, _pkt: mqtt.IPublishPacket) => {\n\t\t\t\t\t\tclient.end();\n\t\t\t\t\t\tresolve(JSON.parse(payload.toString()) as ZigbeeDevice[]);\n\t\t\t\t\t})\n\t\t\t\t\t.subscribe('zigbee2mqtt/bridge/devices');\n\t\t\t});\n\t\t});\n\n\t\t// mqttDevs\n\t\tconst iobDevs = await this.getForeignObjectsAsync(`${srcInstId}.*`, 'device');\n\t\tfor (const iobDev of Object.values(iobDevs)) {\n\t\t\tconst idPath\t= iobDev._id.split('.');\t\t\t// [ 'zigbee2mqtt', '0', '0x680ae2fffe14a2cb' ]\n\t\t\tconst ieeeAdr\t= idPath.slice(-1)[0];\n\t\t\tconst zigbeeDev\t= zigbeeDevs.find(dev => (dev.ieee_address === ieeeAdr));\n\t\t\tif (zigbeeDev) {\n\t\t\t\t// zigbeeDev\n\t\t\t\tconst { ieee_address, type, network_address, supported, friendly_name, disabled, definition, power_source, software_build_id, model_id, interviewing, interview_completed, manufacturer, endpoints } = zigbeeDev;\n\t\t\t\tif (type !== 'EndDevice'  &&  type !== 'Router'\t) { throw new Error(`invalid device type ${type}`\t\t\t); }\n\t\t\t\tif (typeof ieee_address\t\t\t!== 'string'\t) { throw new Error('device ieee_address must be string'\t\t\t); }\n\t\t\t\tif (typeof network_address\t\t!== 'number'\t) { throw new Error('device network_address must be number'\t\t); }\n\t\t\t\tif (typeof supported\t\t\t!== 'boolean'\t) { throw new Error('device supported must be boolean'\t\t\t\t); }\n\t\t\t\tif (typeof friendly_name\t\t!== 'string'\t) { throw new Error('device friendly_name must be string'\t\t\t); }\n\t\t\t\tif (typeof disabled\t\t\t\t!== 'boolean'\t) { throw new Error('device disabled must be boolean'\t\t\t\t); }\n\t\t\t\tif (typeof definition\t\t\t!== 'object'\t) { throw new Error('device definition must be object'\t\t\t\t); }\n\t\t\t\tif (power_source !== 'Battery'  &&  power_source !== 'Mains (single phase)') { throw new Error('device power_source must be object'); }\n\t\t\t\tif (typeof model_id\t\t\t\t!== 'string'\t) { throw new Error('device model_id must be string'\t\t\t\t); }\n\t\t\t\tif (typeof interviewing\t\t\t!== 'boolean'\t) { throw new Error('device interviewing must be boolean'\t\t\t); }\n\t\t\t\tif (typeof interview_completed\t!== 'boolean'\t) { throw new Error('device interview_completed must be boolean'\t); }\n\t\t\t\tif (typeof manufacturer\t\t\t!== 'string'\t) { throw new Error('device manufacturer must be string'\t\t\t); }\n\t\t\t\tif (typeof endpoints\t\t\t!== 'object'\t) { throw new Error('device endpoints must be object'\t\t\t\t); }\n\n\t\t\t\t// zigbeeDev.definition\n\t\t\t\tconst { model, vendor, description, exposes, supports_ota, options } = zigbeeDev.definition;\n\t\t\t\tif (typeof model\t\t\t\t!== 'string'\t) { throw new Error('definition model must be string'\t\t\t\t\t); }\n\t\t\t\tif (typeof vendor\t\t\t\t!== 'string'\t) { throw new Error('definition vendor must be string'\t\t\t\t\t); }\n\t\t\t\tif (typeof description\t\t\t!== 'string'\t) { throw new Error('definition description must be string'\t\t\t); }\n\t\t\t\tif (typeof exposes\t\t\t\t!== 'object'\t) { throw new Error('definition exposes must be object'\t\t\t\t); }\n\t\t\t\tif (typeof supports_ota\t\t\t!== 'boolean'\t) { throw new Error('definition supports_ota must be boolean'\t\t\t); }\n\t\t\t\tif (typeof options\t\t\t\t!== 'object'\t) { throw new Error('definition options must be object'\t\t\t\t); }\n\n\t\t\t\t// zigbeeDev.definition.exposes\n\t\t\t\tconst checkFeature = (feature: ZigbeeFeature): void => {\n\t\t\t\t\tconst { access, label, name, type } = feature;\n\t\t\t\t\tif (typeof access\t\t!== 'number') { throw new Error('feature access must be number'\t\t); }\n\t\t\t\t\tif (typeof label\t\t!== 'string') { throw new Error('feature label must be string'\t\t); }\n\t\t\t\t\tif (typeof name\t\t\t!== 'string') { throw new Error('feature name must be string'\t\t); }\n\t\t\t\t\tif (! [ 'binary', 'numeric', 'enum', 'composite' ].includes(type)\t) { throw new Error(`invalid feature type ${type}`\t\t); }\n\t\t\t\t};\n\t\t\t\tfor (const expose of exposes) {\n\t\t\t\t\tif ([ 'light', 'composite' ].includes(expose.type)  &&  Array.isArray(expose.features)) {\n\t\t\t\t\t\tfor (const feature of expose.features) {\n\t\t\t\t\t\t\tcheckFeature(feature);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcheckFeature(expose as ZigbeeFeature);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// accConfig\n\t\t\t\tconst grpName = idPath.slice(0, 2).join('.');\n\t\t\t\tconst devName = friendly_name;\n\t\t\t\tconst accConfig: AccConfig = {\n\t\t\t\t\t'groupString':\t\tgrpName,\t\t\t\t\t\t\t// used only by iobroker adapter to group accessiries\n\t\t\t\t\t'name':\t\t\t\t`${grpName}.${devName}`,\t\t\t// NOTE: yahka adapter uses 'name' to build homekit UUID!\n\t\t\t\t\t'model':\t\t\t`${model_id} (${model})`,\t\t\t// visible within iOS home app\n\t\t\t\t\t'manufacturer':\t\tvendor,\t\t\t\t\t\t\t\t// visible within iOS home app\n\t\t\t\t\t'serial':\t\t\tieee_address,\t\t\t\t\t\t// visible within iOS home app\n\t\t\t\t\t'firmware':\t\t\tsoftware_build_id  ||  'n/a',\t\t// visible within iOS home app\n\t\t\t\t\t'category':\t\t\t'',\t\t\t\t\t\t\t\t\t// accCatIds[expose.type]\n\t\t\t\t\t'services':\t\t\t[],\n\t\t\t\t\t'availableState':\t`${iobDev._id}.available`,\n\t\t\t\t};\n\n\t\t\t\t// typedFeatures, features, featureNames, exposedLight\n\t\t\t\tconst features\t\t= exposes.filter(expose => 'name'     in expose);\n\t\t\t\tconst featureNames\t= features.map(feature => feature.name);\n\t\t\t\tconst typedFeatures\t= exposes.filter(expose => 'features' in expose);\n\t\t\t\tconst exposedLight\t= typedFeatures.filter(expose => (expose.type === 'light'))[0];\n\n\t\t\t\t// Lightbulb\n\t\t\t\tif (exposedLight) {\n\t\t\t\t\tconst characteristics: SrvCharacteristic[] = [];\n\t\t\t\t\tfor (const feature of exposedLight?.features  ||  []) {\n\t\t\t\t\t\tif (feature.name === 'state') {\n\t\t\t\t\t\t\tcharacteristics.push({\n\t\t\t\t\t\t\t\t'name': 'On', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.state`\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t} else if (feature.name === 'brightness') {\n\t\t\t\t\t\t\tcharacteristics.push({\n\t\t\t\t\t\t\t\t'name': 'Brightness', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.brightness`\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t} else if (feature.name === 'color_temp') {\n\t\t\t\t\t\t\tcharacteristics.push({\n\t\t\t\t\t\t\t\t'name': 'ColorTemperature',\t'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.colortemp`,\n\t\t\t\t\t\t\t\t'conversionFunction':\t'script',\n\t\t\t\t\t\t\t\t'conversionParameters': {\n\t\t\t\t\t\t\t\t\t'toHomeKit':\t\t'return Math.max(153, value)',\n\t\t\t\t\t\t\t\t\t'toIOBroker':\t\t'return Math.max(153, value)'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\taccConfig.category = AccCatId['Lightbulb'];\n\t\t\t\t\taccConfig.services.push({\n\t\t\t\t\t\t'type': 'Lightbulb', 'subType': '', 'name': devName, 'characteristics':\tcharacteristics\n\t\t\t\t\t});\n\n \t\t\t\t// Sensor ContactSensor\n\t\t\t\t} else if (featureNames.includes('contact')) {\n\t\t\t\t\taccConfig.category = AccCatId['Sensor'];\n\n\t\t\t\t\tfor (const feature of features) {\n\t\t\t\t\t\t// Sensor ContactSensor\n\t\t\t\t\t\tif (feature.name === 'contact') {\n\t\t\t\t\t\t\tconst characteristics: SrvCharacteristic[] = [{\n\t\t\t\t\t\t\t\t'name': 'ContactSensorState', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters':\t`${iobDev._id}.opened`\n\t\t\t\t\t\t\t}];\n\t\t\t\t\t\t\taccConfig.services.push({\n\t\t\t\t\t\t\t\t'type': 'ContactSensor', 'subType': '', 'name': devName, 'characteristics':\tcharacteristics\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Sensor Battery\n\t\t\t\t\t\tif (feature.name === 'battery') {\n\t\t\t\t\t\t\tconst characteristics: SrvCharacteristic[] = [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t'name': 'BatteryLevel',\t\t'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.battery`\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t'name': 'StatusLowBattery',\t'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.battery`,\n\t\t\t\t\t\t\t\t\t'conversionFunction': 'script', 'conversionParameters': { 'toHomeKit': 'return (value < 10);' }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\taccConfig.services.push({\n\t\t\t\t\t\t\t\t'type': 'Battery', 'subType': '', 'name': devName, 'characteristics': characteristics\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Sensor LeakSensor\n\t\t\t\t} else if (featureNames.includes('water_leak')) {\n\t\t\t\t\taccConfig.category = AccCatId['Sensor'];\n\n\t\t\t\t\tfor (const feature of features) {\n\t\t\t\t\t\t// Sensor LeakSensor\n\t\t\t\t\t\tif (feature.name === 'water_leak') {\n\t\t\t\t\t\t\tconst characteristics: SrvCharacteristic[] = [{\n\t\t\t\t\t\t\t\t'name': 'LeakDetected', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.detected`\n\t\t\t\t\t\t\t}];\n\t\t\t\t\t\t\taccConfig.services.push({\n\t\t\t\t\t\t\t\t'type': 'LeakSensor', 'subType': '', 'name': devName, 'characteristics': characteristics\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Sensor Battery\n\t\t\t\t\t\tif (feature.name === 'battery') {\n\t\t\t\t\t\t\tconst characteristics: SrvCharacteristic[] = [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t'name': 'BatteryLevel',\t\t'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.battery`\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t'name': 'StatusLowBattery',\t'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.battery`,\n\t\t\t\t\t\t\t\t\t'conversionFunction': 'script', 'conversionParameters': { 'toHomeKit': 'return (value < 10);' }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\taccConfig.services.push({\n\t\t\t\t\t\t\t\t'type': 'Battery', 'subType': '', 'name': devName, 'characteristics': characteristics\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Sensor LeakSensor\n\t\t\t\t} else if (featureNames.includes('occupancy')) {\n\t\t\t\t\taccConfig.category = AccCatId['Sensor'];\n\n\t\t\t\t\tfor (const feature of features) {\n\t\t\t\t\t\t// Sensor LeakSensor\n\t\t\t\t\t\tif (feature.name === 'occupancy') {\n\t\t\t\t\t\t\tconst characteristics: SrvCharacteristic[] = [{\n\t\t\t\t\t\t\t\t'name': 'OccupancyDetected', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.occupancy`\n\t\t\t\t\t\t\t}];\n\t\t\t\t\t\t\taccConfig.services.push({\n\t\t\t\t\t\t\t\t'type': 'OccupancySensor', 'subType': '', 'name': devName, 'characteristics': characteristics\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Sensor Battery\n\t\t\t\t\t\tif (feature.name === 'battery') {\n\t\t\t\t\t\t\tconst characteristics: SrvCharacteristic[] = [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t'name': 'BatteryLevel',\t\t'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.battery`\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t'name': 'StatusLowBattery',\t'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.battery`,\n\t\t\t\t\t\t\t\t\t'conversionFunction': 'script', 'conversionParameters': { 'toHomeKit': 'return (value < 10);' }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\taccConfig.services.push({\n\t\t\t\t\t\t\t\t'type': 'Battery', 'subType': '', 'name': devName, 'characteristics': characteristics\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Sensor humidity (and temperature)\n\t\t\t\t} else if (featureNames.includes('humidity')) {\n\t\t\t\t\taccConfig.category = AccCatId['Sensor'];\n\n\t\t\t\t\tfor (const feature of features) {\n\t\t\t\t\t\t// Sensor humidity\n\t\t\t\t\t\tif (feature.name === 'humidity') {\n\t\t\t\t\t\t\tconst characteristics: SrvCharacteristic[] = [{\n\t\t\t\t\t\t\t\t'name': 'CurrentRelativeHumidity', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.humidity`\n\t\t\t\t\t\t\t}];\n\t\t\t\t\t\t\taccConfig.services.push({\n\t\t\t\t\t\t\t\t'type': 'HumiditySensor', 'subType': '', 'name': devName, 'characteristics': characteristics\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Sensor temperature\n\t\t\t\t\t\tif (feature.name === 'temperature') {\n\t\t\t\t\t\t\tconst characteristics: SrvCharacteristic[] = [{\n\t\t\t\t\t\t\t\t'name': 'CurrentTemperature', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.temperature`\n\t\t\t\t\t\t\t}];\n\t\t\t\t\t\t\taccConfig.services.push({\n\t\t\t\t\t\t\t\t'type': 'TemperatureSensor', 'subType': '', 'name': devName, 'characteristics': characteristics\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Sensor Battery\n\t\t\t\t\t\tif (feature.name === 'battery') {\n\t\t\t\t\t\t\tconst characteristics: SrvCharacteristic[] = [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t'name': 'BatteryLevel',\t\t'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.battery`\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t'name': 'StatusLowBattery',\t'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.battery`,\n\t\t\t\t\t\t\t\t\t'conversionFunction': 'script', 'conversionParameters': { 'toHomeKit': 'return (value < 10);' }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\taccConfig.services.push({\n\t\t\t\t\t\t\t\t'type': 'Battery', 'subType': '', 'name': devName, 'characteristics': characteristics\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// enable history\n\t\t\t\t//this.log.debug(sprintf('%-30s %-20s %-50s %s', 'create_zigbee2mqtt()', `featureNames`, iobDev._id, JSON.stringify(featureNames, null, 4)));\n\t\t\t\tfor (const featureName of [ 'linkquality', 'opened', 'detected', 'battery', 'battery_low', 'device_temperature', 'voltage' ]) {\n\t\t\t\t\tif (featureNames.includes(featureName)) {\n\t\t\t\t\t\tconst stateName = (featureName === 'linkquality' ? 'link_quality' : featureName)\n\t\t\t\t\t\tawait this.enableHistory(`${iobDev._id}.${stateName}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tawait this.enableHistory(`${iobDev._id}.available`);\n\n\t\t\t\t// add devConfig\n\t\t\t\tif (accConfig.category !== '') {\n\t\t\t\t\t// add Name characteristic to every service\n\t\t\t\t\tfor (const accService of accConfig.services) {\n\t\t\t\t\t\taccService.characteristics.push({\n\t\t\t\t\t\t\t'name': 'Name', 'inOutFunction': 'const', 'inOutParameters': devName\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.log.debug(sprintf('%-30s %-20s %-50s %s', 'create_zigbee2mqtt()', accService.type, accConfig.name, accService.name));\n\t\t\t\t\t}\n\n\t\t\t\t\t// add accessory\n\t\t\t\t\taccConfigs.push(accConfig);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//this.log.debug(sprintf('%-30s %-20s %-50s\\n%s', 'create_zigbee2mqtt()', 'devConfigs', '', JSON.stringify(devConfigs, null, 4)));\n\t\treturn accConfigs;\n\t}\n\n\t/**\n\t *\n\t * @param stateId\n\t */\n\tprivate async enableHistory(stateId: string): Promise<void> {\n\t\tif (this.historyId) {\n\t\t\tconst stateObj = await this.getForeignObjectAsync(stateId);\n\t\t\tif (stateObj?.type === 'state') {\n\t\t\t\tconst {type, common, native } = stateObj;\n\t\t\t\tcommon.custom = common.custom  ||  {};\n\t\t\t\tcommon.custom[this.historyId] = Object.assign({\n\t\t\t\t\t// defaults\n\t\t\t\t\t'enabled':\t\t\t\t\ttrue,\n\t\t\t\t\t'changesRelogInterval':\t\t0,\n\t\t\t\t\t'retention':\t\t\t\t0,\n\t\t\t\t\t'changesOnly':\t\t\t\tfalse,\n\t\t\t\t}, common.custom[this.historyId], {\n\t\t\t\t\t// overrides\n\t\t\t\t\t'changesOnly':\t\t\t\tfalse,\n\t\t\t\t});\n\n\t\t\t\t//this.log.debug(sprintf('%-30s %-20s %-50s %s', 'enableHistory()', 'common', stateId, JSON.stringify(common, null, 4)));\n\t\t\t\tawait this.setForeignObject(stateId, { type, common, native });\n\n\t\t\t} else {\n\t\t\t\tthis.log.warn(sprintf('%-31s %-20s %-50s', 'enableHistory()', 'missing', stateId));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\tcallback();\n\t}\n}\n\n\n// ~~~~~~~~~~~\n// sortBy(key)\n// ~~~~~~~~~~~\nfunction sortBy(key: string) {\n\treturn (a: {[index: string]: any}, b: {[index: string]: any}) => (a[key] > b[key]) ? +1 : ((a[key] < b[key]) ? -1 : 0);\n}\n\n\n\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new YahkaConfig(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new YahkaConfig())();\n}\n"],
  "mappings": "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",
  "names": ["createdDev", "deepDiff", "mqtt", "_pkt", "type"]
}
