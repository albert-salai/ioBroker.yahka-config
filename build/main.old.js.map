{
  "version": 3,
  "sources": ["../src/main.old.ts"],
  "sourcesContent": ["import * as utils\t\t\tfrom '@iobroker/adapter-core';\nimport YahkaIoPkgJson\t\tfrom 'iobroker.yahka/io-package.json';\nimport { sprintf }\t\t\tfrom 'sprintf-js';\nimport mqtt \t\t\t\tfrom 'mqtt';\n\n\n// SrvCharacteristic\ninterface SrvCharacteristic {\n\tname:\t\t\t\t\tstring,\n\tenabled?:\t\t\t\tboolean,\n\tinOutFunction:\t\t\tstring,\n\tinOutParameters:\t\tstring | boolean | number,\n\tconversionFunction?:\tstring,\n\tconversionParameters?:\t{ toHomeKit?: string, toIOBroker?: string },\n}\n\n// AccService\ninterface AccService {\n\ttype:\t\t\t\t\tstring,\n\tsubType:\t\t\t\tstring,\n\tname:\t\t\t\t\tstring,\n\tcharacteristics:\t\tSrvCharacteristic[]\n}\n\n// AccConfig\ninterface AccConfig {\n\tconfigType:\t\t\t\tstring,\n\tcategory?:\t\t\t\tstring,\n\tname:\t\t\t\t\tstring,\n\tmanufacturer:\t\t\tstring,\n\tserial:\t\t\t\t\tstring,\n\tmodel?:\t\t\t\t\tstring,\n\tfirmware?:\t\t\t\tstring,\n\tservices:\t\t\t\tAccService[],\n\tenabled:\t\t\t\tboolean,\n\tgroupString:\t\t\tstring\n}\n\n// ZigbeeFeature, TypedFeatures, ZigbeeDev\ntype ZigbeeFeature = {\n\tname:\t\t\t\tstring\n};\ntype TypedFeatures = {\n\ttype:\t\t\t\t'binary' | 'light' | 'numeric' | 'enum' | 'composite',\n\tfeatures:\t\t\t ZigbeeFeature[],\n};\ntype ZigbeeDev = {\n\ttype:\t\t\t\tstring,\n\tieee_address:\t\tstring,\n\tfriendly_name:\t\tstring,\n\tmanufacturer:\t\tstring,\n\tmodel_id:\t\t\tstring,\n\tsoftware_build_id:\tstring,\n\tdefinition: {\n\t\ttype:\t\t\t'Router' | 'EndDevice',\n\t\tvendor:\t\t\tstring,\n\t\tmodel:\t\t\tstring,\n\t\tdescription:\tstring,\n\t\texposes:\t\t(ZigbeeFeature | TypedFeatures)[],\n\t}\n};\n\n\n// ~~~~~~~~\n// AccCatId\n// ~~~~~~~~\n// AccCatId: { \"Lightbulb\": \"5\", \"Switch\": \"8\", \"Thermostat\": \"9\", \"Sensor\": \"10\", ... }\nconst AccCatId = Object.entries(YahkaIoPkgJson.objects[0].native).reduce((result: {[index: string]: string}, [key, val]) => {\n\tresult[val.text.replace(/ /g,'_')] = key;\n\treturn result;\n}, {});\n\n\n// ~~~~~~~~~~~\n// YahkaConfig\n// ~~~~~~~~~~~\nclass YahkaConfig extends utils.Adapter {\n\t// CONSTRUCTOR\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: 'yahka-config',\n\t\t});\n\t\tthis.on('ready',  this.onReady .bind(this));\n\t\tthis.on('unload', this.onUnload.bind(this));\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void> {\n\t\tconst mapping = this.config.mapping;\n\t\tthis.log.info(sprintf('%-31s %-20s %-50s', 'onReady()', 'mapping', '\\n'+JSON.stringify(mapping, null, 4)));\n\n\t\t// yahka dstId\n\t\tfor (const [ dstId, srcIdsObj ] of Object.entries(mapping)) {\n\t\t\tconst yahkaDst = await this.getForeignObjectAsync('system.adapter.' + dstId);\n\t\t\tif (! yahkaDst) {\n\t\t\t\tthis.log.warn(sprintf('%-31s %-20s %-50s', 'onReady()', ('system.adapter.'+dstId), 'not installed'));\n\t\t\t\tdelete mapping[dstId];\n\n\t\t\t} else {\n\t\t\t\t// get yahkaOldDevs\t\t-\t\tyahka adapter uses 'name' to build homekit UUID\n\t\t\t\tconst yahkaOldDevs: AccConfig[] = yahkaDst['native']['bridge']['devices'];\n\n\t\t\t\t// get yahkaNewDevs\n\t\t\t\tlet yahkaNewDevs: AccConfig[] = [];\n\t\t\t\tconst srcInstIds = Object.entries(srcIdsObj).filter(entry => (entry[1] === true)).map(entry => entry[0]).sort();\n\t\t\t\tfor (const srcInstId of srcInstIds) {\n\t\t\t\t\tconst adapter = srcInstId.split('.')[0];\n\t\t\t\t\tif\t\t(adapter === 'tr-064'\t\t)\t{ yahkaNewDevs = yahkaNewDevs.concat(await this.create_tr064\t\t(srcInstId, yahkaDst)); }\n\t\t\t\t\telse if (adapter === 'fritzdect'\t)\t{ yahkaNewDevs = yahkaNewDevs.concat(await this.create_fritzdect\t(srcInstId, yahkaDst)); }\n\t\t\t\t\telse if (adapter === 'shelly'\t\t)\t{ yahkaNewDevs = yahkaNewDevs.concat(await this.create_shelly\t\t(srcInstId, yahkaDst)); }\n\t\t\t\t\telse if (adapter === '0_userdata'\t)\t{ yahkaNewDevs = yahkaNewDevs.concat(await this.create_switchboard\t(srcInstId, yahkaDst)); }\n\t\t\t\t\telse if (adapter === 'zigbee2mqtt'\t)\t{ yahkaNewDevs = yahkaNewDevs.concat(await this.create_zigbee2mqtt\t(srcInstId, yahkaDst)); }\n\t\t\t\t\telse if (adapter === 'danfoss-icon'\t)\t{ yahkaNewDevs = yahkaNewDevs.concat(await this.create_danfoss\t\t(srcInstId, yahkaDst)); }\n\t\t\t\t}\n\n\t\t\t\t// enable all characteristics\n\t\t\t\tfor (const device of yahkaNewDevs) {\n\t\t\t\t\t// defaults\n\t\t\t\t\tObject.assign(yahkaNewDevs, {\n\t\t\t\t\t\t'firmware':\t\t\t'n/a',\t\t\t// visible within iOS home app\n\t\t\t\t\t}, yahkaNewDevs);\n\t\t\t\t\tfor (const service of device.services) {\n\t\t\t\t\t\tfor (const characteristic of service.characteristics) {\n\t\t\t\t\t\t\tcharacteristic.enabled = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// sort yahkaOldDevs, yahkaNewDevs\n\t\t\t\tyahkaOldDevs.sort(sortBy('name'));\n\t\t\t\tyahkaNewDevs.sort(sortBy('name'));\n\t\t\t\t//this.log.info(sprintf('%-31s %-20s\\n%s', 'createYahkaConfig()', 'yahkaOldDevs', JSON.stringify(yahkaOldDevs, null, 4)));\n\t\t\t\t//this.log.info(sprintf('%-31s %-20s\\n%s', 'createYahkaConfig()', 'yahkaNewDevs', JSON.stringify(yahkaNewDevs, null, 4)));\n\n\t\t\t\t// copy 'enabled' state from oldDev to newDev\n\t\t\t\tfor (const yahkaNewDev of  yahkaNewDevs) {\n\t\t\t\t\tconst  yahkaOldDev  =  yahkaOldDevs.find(oldDev => (oldDev.name === yahkaNewDev.name));\n\t\t\t\t\tyahkaNewDev.enabled = (yahkaOldDev) ? yahkaOldDev.enabled : true;\n\t\t\t\t}\n\n\t\t\t\t// keep custom yahka device configs\t\t-\t\tyahka adapter uses 'name' to build homekit UUID\n\t\t\t\tlet yahkaChanged = false;\n\t\t\t\tfor (const yahkaOldDev of yahkaOldDevs) {\n\t\t\t\t\tconst keep = ! yahkaNewDevs.some((newDev) => (newDev.name === yahkaOldDev.name));\n\t\t\t\t\tif (keep) {\n\t\t\t\t\t\tthis.log.warn(sprintf('%-31s %-20s %-50s %s', 'createYahkaConfig()', 'keeping', yahkaOldDev.name, ''));\n\t\t\t\t\t\tyahkaOldDev.enabled = false;\n\t\t\t\t\t\tyahkaNewDevs.push();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// yahkaChanged?\t\t\t\t\t\t-\t\tyahka adapter uses 'name' to build homekit UUID\n\t\t\t\tconst diff = objDiff(yahkaOldDevs, yahkaNewDevs, 'yahkaDevs');\n\t\t\t\tyahkaChanged = yahkaChanged  ||  (Object.values(diff).length > 0);\n\n\t\t\t\t// debug\n\t\t\t\tif (Object.values(diff).length > 0) {\n\t\t\t\t\tthis.log.info(sprintf('%-31s %-20s %-50s %s', 'createYahkaConfig()', dstId, 'diff', '\\n'+JSON.stringify(diff, null, 4)));\n\t\t\t\t}\n\n\t\t\t\t// save\n\t\t\t\tif (yahkaChanged) {\n\t\t\t\t\tthis.log.info(sprintf('%-31s %-20s %-50s %s', 'createYahkaConfig()', dstId, 'saving yahka devices ...', ''));\n\t\t\t\t\t//\tawait this.extendForeignObjectAsync(dstInst, { 'native': { 'bridge': { 'devices': yahkaNewDevs } } });\n\t\t\t\t\tyahkaDst['native']['bridge']['devices'] = yahkaNewDevs;\n\t\t\t\t\tawait this.setForeignObjectAsync('system.adapter.' + dstId, yahkaDst);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t// stop until next schedule\n\t\tthis.terminate ? this.terminate('yahka config updated. adapter stopped until next scheduled moment') : process.exit(0);\n\t}\n\n\n\t/**\n\t *\n\t * @param srcInstId\n\t * @param _yahkaDstApt\n\t * @returns\n\t */\n\tprivate async create_tr064(srcInstId: string, _yahkaDstApt: ioBroker.Object): Promise<AccConfig[]> {\n\t\tconst accConfigs: AccConfig[] = [];\n\n\t\t// collect source state objects\n\t\tconst stateObjs  = await this.getForeignObjectsAsync(`${srcInstId}.states.*`, 'state') || {};\n\t\tfor (const state of Object.values(stateObjs).sort(sortBy('_id'))) {\n\t\t\tconst idPath = state._id.split('.');\t\t\t// [ 'tr-064', '0', 'states', 'wps' ]\n\t\t\tif (state.common.type === 'boolean'  &&  ! [ 'wlan', 'wlan24', 'wlan50' ].includes(idPath.slice(-1)[0])) {\n\t\t\t\tthis.log.info(sprintf('%-31s %-20s %-50s %s', 'create_tr064()', 'state', state._id, state.common.name));\n\n\t\t\t\tconst accConfig = {\n\t\t\t\t\t'configType':\t\t'customdevice',\n\t\t\t\t\t'category':\t\t\tAccCatId.Switch,\n\t\t\t\t\t'name':\t\t\t\tstate._id,\t\t\t\t\t\t\t\t// NOTE: yahka adapter uses 'name' to build homekit UUID!\n\t\t\t\t\t'manufacturer':\t\tidPath.slice(0,2).join('.'),\t\t\t// visible within iOS home app\n\t\t\t\t\t'serial':\t\t\tidPath.slice(2  ).join('.'),\t\t\t// visible within iOS home app\n\t\t\t\t\t'model':\t\t\tstate.common.name.toString(),\t\t\t// visible within iOS home app\n\t\t\t\t\t'services':\t\t\t[] as AccService[],\n\t\t\t\t\t'enabled':\t\t\ttrue,\n\t\t\t\t\t'groupString':\t\tidPath.slice(0,2).join('.')\t\t\t\t// used by adapter only\n\t\t\t\t};\n\t\t\t\taccConfigs.push(accConfig);\n\n\t\t\t\taccConfig.services.push({\n\t\t\t\t\t'type': 'Switch', 'subType': '', 'name': accConfig.model,\n\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t{ 'name': 'Name',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': accConfig.model\t},\n\t\t\t\t\t\t{ 'name': 'On',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': state._id\t}\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn accConfigs;\n\t}\n\n\n\t/**\n\t *\n\t * @param srcInstId\n\t * @param _yahkaDstApt\n\t * @returns\n\t */\n\tprivate async create_fritzdect(srcInstId: string, _yahkaDstApt: ioBroker.Object): Promise<AccConfig[]> {\n\t\tconst accConfigs: AccConfig[] = [];\n\n\t\t/*\n\t\tconst productNames = await this.getForeignStatesAsync(`${srcInstId}.*.productname`);\n\t\tfor (const [ prodNameId, prodNameObj ] of Object.entries(productNames)) {\n\t\t\tconst idPath\t= prodNameId.split('.');\t\t\t\t\t// [ 'fritzdect', '0', 'DECT_116570168794', 'productname' ]\n\t\t\tconst idBase\t= idPath.slice(0, 2).join('.');\t\t\t\t//   'fritzdect.0.DECT_116570168794'\t\t(channel)\n\t\t\tconst channel\t= await this.getForeignObjectAsync(idBase);\n\n\t\t\tconst productName = prodNameObj.val;\n\n\t\t\t// accCategory, srvType, characteristics\n\t\t\tlet accCategory\t\t\t\t\t\t\t\t= '';\t\t\t//accCatIds[expose.type]\n\t\t\tlet srvType\t\t\t\t\t\t\t\t\t= '';\n\t\t\tconst characteristics: SrvCharacteristic[]\t= [];\n\n\t\t\t// FRITZ!DECT Repeater 100\n\t\t\tif (productName === 'FRITZ!DECT Repeater 100') {\n\t\t\t\taccCategory = AccCatId.Sensor;\n\t\t\t\tsrvType\t\t= 'TemperatureSensor';\n\t\t\t\tcharacteristics.push({\n\t\t\t\t\t'name': 'CurrentTemperature', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${idBase}.celsius`\n\t\t\t\t});\n\n\t\t\t// FRITZ!DECT 200\n\t\t\t} else if (productName === 'FRITZ!DECT 200') {\n\t\t\t\taccCategory = AccCatId.Switch;\n\t\t\t\tsrvType\t\t= 'Switch';\n\t\t\t\tcharacteristics.push({\n\t\t\t\t\t'name': 'On', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${idBase}.state`\n\t\t\t\t});\n\n\t\t\t// FRITZ!DECT 301\n\t\t\t} else if (productName === 'FRITZ!DECT 301') {\n\n\t\t\t} else {\n\n\t\t\t}\n\n\t\t\t// add devConfig\n\t\t\tif (accCategory  &&  srvType) {\n\t\t\t\tthis.log.debug(sprintf('%-30s %-20s %-50s %s', 'create_shelly()', `created ${idPath[3]}`, channel._id, channel.common.name));\n\n\t\t\t\t// name\n\t\t\t\tcharacteristics.push({\n\t\t\t\t\t'name': 'Name', 'inOutFunction': 'const', 'inOutParameters': name\n\t\t\t\t});\n\n\t\t\t\t// accConfig\n\t\t\t\tconst accConfig: AccConfig = {\n\t\t\t\t\t'configType':\t\t'customdevice',\n\t\t\t\t\t'enabled':\t\t\ttrue,\n\t\t\t\t\t'groupString':\t\tsrcInstId,\t\t\t\t// used by adapter only\n\t\t\t\t\t'name':\t\t\t\tname,\t\t\t\t\t// NOTE: yahka adapter uses 'name' to build homekit UUID!\n\t\t\t\t\t'category':\t\t\taccCategory,\n\t\t\t\t\t'manufacturer':\t\t'shelly',\t\t\t\t// visible within iOS home app\n\t\t\t\t\t'serial':\t\t\tidPath[2],\t\t\t\t// visible within iOS home app\n\t\t\t\t\t'services':\t\t\t[],\n\t\t\t\t};\n\t\t\t\taccConfigs.push(accConfig);\n\n\t\t\t\t// accService\n\t\t\t\tconst accService: AccService = {\n\t\t\t\t\t'type': srvType, 'subType': '', 'name': name, 'characteristics':\tcharacteristics\n\t\t\t\t};\n\t\t\t\taccConfig.services.push(accService);\n\t\t\t}\n\t\t}\n\t\t*/\n\n\t\treturn accConfigs;\n\t}\n\n\n\t/**\n\t *\n\t * @param srcInstId\n\t * @param _yahkaDstApt\n\t * @returns\n\t */\n\tprivate async create_shelly(srcInstId: string, _yahkaDstApt: ioBroker.Object): Promise<AccConfig[]> {\n\t\tconst accConfigs: AccConfig[] = [];\n\n\t\t// collect source state objects\n\t\tconst lightChannels\t= await this.getForeignObjectsAsync(`${srcInstId}.*.lights`, 'channel') || {};\n\t\tconst relayChannels\t= await this.getForeignObjectsAsync(`${srcInstId}.*.Relay*`, 'channel') || {};\n\t\tconst channels\t\t= Object.values(lightChannels).concat(Object.values(relayChannels)).sort(sortBy('_id'));\n\n\t\t// channels\n\t\tfor (const channel of channels) {\n\t\t\tconst idPath\t= channel._id.split('.');\t\t\t\t\t// [ 'shelly', '0', 'SHDM-2#94B97E16BE61#1',\t'lights' ]\n\t\t\tconst name\t= channel.common.name.toString();\t\t\t\t// [ 'shelly', '0', 'SHPLG-S#6A0761#1',\t\t\t'Relay0' ]\n\n\t\t\t// accCategory, srvType, characteristics\n\t\t\tlet accCategory\t\t\t\t\t\t\t\t= '';\t\t\t//accCatIds[expose.type]\n\t\t\tlet srvType\t\t\t\t\t\t\t\t\t= '';\n\t\t\tconst characteristics: SrvCharacteristic[]\t= [];\n\n\t\t\t// Relay\n\t\t\tif (idPath[3].startsWith('Relay')) {\n\t\t\t\taccCategory = AccCatId.Switch;\n\t\t\t\tsrvType\t\t= 'Switch';\n\t\t\t\tcharacteristics.push({\n\t\t\t\t\t'name': 'On', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${channel._id}.Switch`\n\t\t\t\t});\n\n\t\t\t// lights\n\t\t\t} else if (idPath[3] === 'lights') {\n\t\t\t\taccCategory = AccCatId.Lightbulb;\n\t\t\t\tsrvType\t\t= 'Lightbulb';\n\t\t\t\tcharacteristics.push({\n\t\t\t\t\t'name': 'On', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${channel._id}.Switch`\n\t\t\t\t});\n\t\t\t\tcharacteristics.push({\n\t\t\t\t\t'name': 'Brightness',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${channel._id}.brightness`\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// add devConfig\n\t\t\tif (accCategory  &&  srvType) {\n\t\t\t\tthis.log.debug(sprintf('%-30s %-20s %-50s %s', 'create_shelly()', `created ${idPath[3]}`, channel._id, channel.common.name));\n\n\t\t\t\t// name\n\t\t\t\tcharacteristics.push({\n\t\t\t\t\t'name': 'Name', 'inOutFunction': 'const', 'inOutParameters': name\n\t\t\t\t});\n\n\t\t\t\t// accConfig\n\t\t\t\tconst accConfig: AccConfig = {\n\t\t\t\t\t'configType':\t\t'customdevice',\n\t\t\t\t\t'enabled':\t\t\ttrue,\n\t\t\t\t\t'groupString':\t\tsrcInstId,\t\t\t\t// used by adapter only\n\t\t\t\t\t'name':\t\t\t\tname,\t\t\t\t\t// NOTE: yahka adapter uses 'name' to build homekit UUID!\n\t\t\t\t\t'category':\t\t\taccCategory,\n\t\t\t\t\t'manufacturer':\t\t'shelly',\t\t\t\t// visible within iOS home app\n\t\t\t\t\t'serial':\t\t\tidPath[2],\t\t\t\t// visible within iOS home app\n\t\t\t\t\t'services':\t\t\t[],\n\t\t\t\t};\n\t\t\t\taccConfigs.push(accConfig);\n\n\t\t\t\t// accService\n\t\t\t\tconst accService: AccService = {\n\t\t\t\t\t'type': srvType, 'subType': '', 'name': name, 'characteristics':\tcharacteristics\n\t\t\t\t};\n\t\t\t\taccConfig.services.push(accService);\n\t\t\t}\n\t\t}\n\n\t\treturn accConfigs;\n\t}\n\n\t/**\n\t *\n\t * @param srcInstId\n\t * @param _yahkaDstApt\n\t */\n\tprivate async create_switchboard(srcInstId: string, _yahkaDstApt: ioBroker.Object): Promise<AccConfig[]> {\n\t\tconst accConfigs: AccConfig[] = [];\n\n\t\tconst pinObjs = await this.getForeignObjectsAsync(`${srcInstId}.pin.*`, 'state') || {};\n\t\tfor (const pinObj of Object.values(pinObjs).sort(sortBy('_id'))) {\n\t\t\tconst objId\t\t= pinObj._id;\t\t\t\t\t\t\t\t\t//   '0_userdata.0.pin.t\u00FCr_tag'\n\t\t\tconst idPath\t= pinObj._id.split('.');\t\t\t\t\t\t// [ '0_userdata', '0', 'pin', 't\u00FCr_tag' ]\n\t\t\tconst objRole\t= pinObj.common.role;\t\t\t\t\t\t\t// 'value.temperature'\n\t\t\tconst objName\t= pinObj.common.name.toString();\t\t\t\t// 'Haust\u00FCr'\n\n\t\t\t// yahka device config\n\t\t\tconst accConfig: AccConfig = {\n\t\t\t\t'configType':\t\t'customdevice',\t\t\t\t\t\t\t// buggy: will not show up in iOS\n\t\t\t\t'name':\t\t\t\tobjId,\t\t\t\t\t\t\t\t\t// NOTE: yahka adapter uses 'name' to build homekit UUID!\n\t\t\t\t'manufacturer':\t\tidPath.slice(0,2).join('.'),\t\t\t// visible within iOS home app\n\t\t\t\t'serial':\t\t\tidPath.slice(2  ).join('.'),\t\t\t// visible within iOS home app\n\t\t\t\t'model':\t\t\tobjName,\t\t\t\t\t\t\t\t// visible within iOS home app\n\t\t\t\t'services':\t\t\t[],\t\t\t\t\t\t\t\t\t\t// default\n\t\t\t\t'enabled':\t\t\ttrue,\n\t\t\t\t'groupString':\t\tidPath.slice(0,2).join('.')\t\t\t\t// used by adapter only\n\t\t\t};\n\n\t\t\tif (objRole === 'door.lock') {\n\t\t\t\taccConfig.category\t= AccCatId.Door_lock;\n\t\t\t\taccConfig.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'LockMechanism', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ 'name': 'LockTargetState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId,\t\t\t'conversionFunction': 'invert'\t},\n\t\t\t\t\t\t\t{ 'name': 'LockCurrentState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId+'_status',\t'conversionFunction': 'invert'\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t} else if (objRole === 'garage.opener') {\n\t\t\t\taccConfig.category\t= AccCatId.Door_lock;\n\t\t\t\taccConfig.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'GarageDoorOpener', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ 'name': 'TargetDoorState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId,\t\t\t'conversionFunction': 'invert'\t},\n\t\t\t\t\t\t\t{ 'name': 'CurrentDoorState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId+'_status',\t'conversionFunction': 'invert'\t},\n\t\t\t\t\t\t\t{ 'name': 'ObstructionDetected','inOutFunction': 'const',\t\t\t\t\t'inOutParameters': false\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t} else if (objRole === 'switch.light') {\n\t\t\t\taccConfig.category = AccCatId.Switch;\n\t\t\t\taccConfig.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'Switch', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'On',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t} else if (objRole === 'switch.fan') {\n\t\t\t\taccConfig.category = AccCatId.Fan;\n\t\t\t\taccConfig.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'Fan', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'On',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t} else if (objRole === 'sensor.leak') {\n\t\t\t\taccConfig.category = AccCatId.Sensor;\n\t\t\t\taccConfig.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'LeakSensor', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'LeakDetected',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t} else if (objRole === 'sensor.motion') {\n\t\t\t\taccConfig.category = AccCatId.Sensor;\n\t\t\t\taccConfig.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'MotionSensor', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'MotionDetected',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t} else if (objRole === 'sensor.occupancy') {\n\t\t\t\taccConfig.category = AccCatId.Sensor;\n\t\t\t\taccConfig.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'OccupancySensor', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'OccupancyDetected',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t} else if (objRole === 'indicator') {\n\t\t\t\taccConfig.category = AccCatId.Sensor;\n\t\t\t\taccConfig.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'ContactSensor', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'ContactSensorState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t} else {\n\t\t\t\tthis.log.debug(sprintf('%-30s %-20s %-50s ignored', 'create_switchboard()', objRole, objId));\n\t\t\t}\n\n\t\t\tif (accConfig.services.length > 0) {\n\t\t\t\tthis.log.debug(sprintf('%-30s %-20s %-50s %s', 'create_switchboard()', objRole, objId, pinObj.common.name));\n\t\t\t\taccConfigs.push(accConfig);\n\t\t\t}\n\t\t}\n\n\t\treturn accConfigs;\n\t}\n\n\n\t/**\n\t *\n\t * @param srcInstId\n\t * @param _yahkaDstApt\n\t */\n\tprivate async create_danfoss(srcInstId: string, _yahkaDstApt: ioBroker.Object): Promise<AccConfig[]> {\n\t\tconst accConfigs: AccConfig[] = [];\n\t\tconst group = srcInstId;\t\t\t\t\t\t\t\t\t\t// 'danfoss-icon.0'\n\n\t\t// danfoss-icon HousePause\n\t\tconst housePause = await this.getForeignObjectAsync(`${srcInstId}.House.HousePause`);\n\t\tif (housePause) {\n\t\t\tconst idPath\t= housePause._id.split('.');\t\t\t\t// [ 'danfoss-icon', '0', 'House', 'HousePause' ]\n\t\t\tconst name\t\t= housePause.common.name.toString();\n\n\t\t\tconst accConfig = {\n\t\t\t\t'configType':\t\t'customdevice',\n\t\t\t\t'category':\t\t\tAccCatId.Switch,\n\t\t\t\t'name':\t\t\t\thousePause._id,\t\t\t\t\t\t// NOTE: yahka adapter uses 'name' to build homekit UUID!\n\t\t\t\t'manufacturer':\t\tgroup,\t\t\t\t\t\t\t\t// visible within iOS home app\n\t\t\t\t'serial':\t\t\tidPath.slice(2).join('.'),\t\t\t// visible within iOS home app\n\t\t\t\t'model':\t\t\tname,\t\t\t\t\t\t\t\t// visible within iOS home app\n\t\t\t\t'services':\t\t\t[] as AccService[],\n\t\t\t\t'enabled':\t\t\ttrue,\n\t\t\t\t'groupString':\t\tgroup\t\t\t\t\t\t\t\t// used by adapter only\n\t\t\t};\n\t\t\taccConfigs.push(accConfig);\n\n\t\t\taccConfig.services.push({\n\t\t\t\t'type': 'Switch', 'subType': '', 'name': accConfig.model,\n\t\t\t\t'characteristics': [\n\t\t\t\t\t{ 'name': 'Name',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': name\t\t\t\t},\n\t\t\t\t\t{ 'name': 'On',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': housePause._id\t}\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\n\t\t// TargetTemp\n\t\tconst targetTemps = await this.getForeignObjectsAsync(`${srcInstId}.room-*.TargetTemp`, 'state');\n\t\tfor (const targetTempObj of Object.values(targetTemps).sort(sortBy('_id'))) {\n\t\t\tthis.log.debug(sprintf('%-30s %-20s %-50s %s', 'create_danfoss()', `TargetTemp`, targetTempObj._id, targetTempObj.common.name));\n\t\t\tconst idPath\t= targetTempObj._id.split('.');\t\t\t\t// [ 'danfoss-icon', '0', 'room-01', 'TargetTemp' ]\n\t\t\tconst idBase\t= idPath.slice(0, -1).join('.');\t\t\t//   'danfoss-icon.0.room-01''\n\t\t\tconst name\t\t= targetTempObj.common.name.toString();\n\n\t\t\tconst accConfig = {\n\t\t\t\t'configType':\t\t'customdevice',\n\t\t\t\t'category':\t\t\tAccCatId.Thermostat,\n\t\t\t\t'name':\t\t\t\ttargetTempObj._id,\t\t\t\t\t// NOTE: yahka adapter uses 'name' to build homekit UUID!\n\t\t\t\t'manufacturer':\t\tgroup,\t\t\t\t\t\t\t\t// visible within iOS home app\n\t\t\t\t'serial':\t\t\tidPath.slice(2).join('.'),\t\t\t// visible within iOS home app\n\t\t\t\t'model':\t\t\tname,\t\t\t\t\t\t\t\t// visible within iOS home app\n\t\t\t\t'services':\t\t\t[] as AccService[],\n\t\t\t\t'enabled':\t\t\ttrue,\n\t\t\t\t'groupString':\t\tgroup\t\t\t\t\t\t\t\t// used by adapter only\n\t\t\t};\n\t\t\taccConfigs.push(accConfig);\n\n\t\t\taccConfig.services.push({\n\t\t\t\t'type': 'Thermostat', 'subType': '', 'name': name,\n\t\t\t\t'characteristics': [\n\t\t\t\t\t{ 'name': 'Name',\t\t\t\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': name\t\t\t\t\t\t},\n\t\t\t\t\t{ 'name': 'TargetTemperature',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': idBase+'.TargetTemp'\t\t},\n\t\t\t\t\t{ 'name': 'CurrentTemperature',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': idBase+'.RoomTemp'\t\t},\n\t\t\t\t\t{ 'name': 'TemperatureDisplayUnits',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': '0', \t\t\t\t\t},\n\t\t\t\t\t{ 'name': 'TargetHeatingCoolingState',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': '3', \t\t\t\t\t},\n\t\t\t\t\t{ 'name': 'CurrentHeatingCoolingState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': idBase+'.ValveState',\n\t\t\t\t\t\t'conversionFunction': 'script', 'conversionParameters': { 'toHomeKit': 'return (value) ? 1 : 2;', 'toIOBroker': 'return (value == 1);' }\n\t\t\t\t\t}\t\t// TargetHeatingCoolingState:\t\t0 := OFF, 1 := HEAT, 2 := COOL, 3 := AUTO\n\t\t\t\t]\t\t\t// CurrentHeatingCoolingState:\t\t0 := OFF, 1 := HEAT, 2 := COOL\n\t\t\t});\n\t\t}\n\n\t\treturn accConfigs;\n\t}\n\n\n\t/**\n\t *\n\t * @param srcInstId\n\t * @param _yahkaDstApt\n\t * @returns\n\t */\n\tprivate async create_zigbee2mqtt(srcInstId: string, _yahkaDstApt: ioBroker.Object): Promise<AccConfig[]> {\n\t\tconst accConfigs: AccConfig[] = [];\n\n\t\t// zigbeeDevs\n\t\tconst zigbeeDevs = await new Promise<ZigbeeDev[]>((resolve, _reject) => {\n\t\t\tconst client = mqtt.connect('mqtt://127.0.0.1:1883');\n\t\t\tclient.on('connect', (_pkt: mqtt.IConnackPacket) => {\n\t\t\t\tclient\n\t\t\t\t\t.on('message', (_topic: string, payload: Buffer, _pkt: mqtt.IPublishPacket) => {\n\t\t\t\t\t\tresolve(JSON.parse(payload.toString()) as ZigbeeDev[]);\n\t\t\t\t\t})\n\t\t\t\t\t.subscribe('zigbee2mqtt/bridge/devices');\n\t\t\t});\n\t\t});\n\n\t\t// mqttDevs\n\t\tconst iobDevs = await this.getForeignObjectsAsync(`${srcInstId}.*`, 'device');\n\t\tfor (const iobDev of Object.values(iobDevs)) {\n\t\t\tconst idPath\t= iobDev._id.split('.');\t\t\t// [ 'zigbee2mqtt', '0', '0x680ae2fffe14a2cb' ]\n\t\t\tconst ieeeAdr\t= idPath.slice(-1)[0];\n\t\t\tconst zigbeeDev\t= zigbeeDevs.find(dev => (dev.ieee_address === ieeeAdr));\n\t\t\tif (! zigbeeDev) {\n\t\t\t\tthis.log.debug(sprintf('%-30s %-20s %-50s %s', 'create_zigbee2mqtt()', `skipped iobDev`, iobDev._id, iobDev.common.name));\n\n\t\t\t} else {\n\t\t\t\t// accCategory, srvType, characteristics\n\t\t\t\tlet accCategory\t\t\t\t\t\t\t\t= '';\t\t\t//accCatIds[expose.type]\n\t\t\t\tlet srvType\t\t\t\t\t\t\t\t\t= '';\n\t\t\t\tconst characteristics: SrvCharacteristic[]\t= [];\n\n\t\t\t\tconst features\t\t= zigbeeDev.definition.exposes.filter(expose => 'name'     in expose);\n\t\t\t\tconst typedFeatures\t= zigbeeDev.definition.exposes.filter(expose => 'features' in expose);\n\t\t\t\tconst exposedLight\t= typedFeatures.filter(expose => (expose.type === 'light'))[0];\n\n\t\t\t\t// Lightbulb\n\t\t\t\tif (exposedLight) {\n\t\t\t\t\taccCategory =  AccCatId.Lightbulb;\n\t\t\t\t\tsrvType\t\t= 'Lightbulb';\n\t\t\t\t\tfor (const feature of exposedLight.features) {\n\t\t\t\t\t\tif (feature.name === 'state') {\n\t\t\t\t\t\t\tcharacteristics.push({\n\t\t\t\t\t\t\t\t'name': 'On', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.state`\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if (feature.name === 'brightness') {\n\t\t\t\t\t\t\tcharacteristics.push({\n\t\t\t\t\t\t\t\t'name': 'Brightness', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.brightness`\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if (feature.name === 'color_temp') {\n\t\t\t\t\t\t\tcharacteristics.push({\n\t\t\t\t\t\t\t\t'name': 'ColorTemperature',\t'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.colortemp`,\n\t\t\t\t\t\t\t\t'conversionFunction':\t'script',\n\t\t\t\t\t\t\t\t'conversionParameters': {\n\t\t\t\t\t\t\t\t\t'toHomeKit':\t\t'return Math.max(153, value)',\n\t\t\t\t\t\t\t\t\t'toIOBroker':\t\t'return Math.max(153, value)'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n \t\t\t\t// ContactSensor\n\t\t\t\t} else if (features.find(feature => (feature.name === 'contact'))) {\n\t\t\t\t\taccCategory =  AccCatId.Sensor;\n\t\t\t\t\tsrvType\t\t= 'ContactSensor';\n\t\t\t\t\tfor (const feature of features) {\n\t\t\t\t\t\tif (feature.name === 'contact') {\n\t\t\t\t\t\t\tcharacteristics.push({\n\t\t\t\t\t\t\t\t'name': 'ContactSensorState', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters':\t`${iobDev._id}.opened`\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if (feature.name === 'battery') {\n\t\t\t\t\t\t\tcharacteristics.push({\n\t\t\t\t\t\t\t\t'name': 'StatusLowBattery', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.battery`,\n\t\t\t\t\t\t\t\t'conversionFunction': 'script', 'conversionParameters': { 'toHomeKit': 'return (value < 10);' }\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n \t\t\t\t// LeakSensor\n\t\t\t\t} else if (features.find(feature => (feature.name === 'water_leak'))) {\n\t\t\t\t\taccCategory =  AccCatId.Sensor;\n\t\t\t\t\tsrvType\t\t= 'LeakSensor';\n\t\t\t\t\tfor (const feature of features) {\n\t\t\t\t\t\tif (feature.name === 'water_leak') {\n\t\t\t\t\t\t\tcharacteristics.push({\n\t\t\t\t\t\t\t\t'name': 'LeakDetected', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters':\t`${iobDev._id}.detected`\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if (feature.name === 'battery') {\n\t\t\t\t\t\t\tcharacteristics.push({\n\t\t\t\t\t\t\t\t'name': 'StatusLowBattery', 'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${iobDev._id}.battery`,\n\t\t\t\t\t\t\t\t'conversionFunction': 'script', 'conversionParameters': { 'toHomeKit': 'return (value < 10);' }\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else if (typedFeatures.length > 0) {\n\t\t\t\t\tthis.log.debug(sprintf('%-30s %-20s %-50s %s\\n%s', 'create_zigbee2mqtt()', 'skipped features', iobDev._id, zigbeeDev.friendly_name, JSON.stringify(typedFeatures, null, 4)));\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.log.debug(sprintf('%-30s %-20s %-50s %s',\t\t'create_zigbee2mqtt()', `skipped ${zigbeeDev.type}`, iobDev._id, zigbeeDev.friendly_name));\n\t\t\t\t\t//this.log.debug(sprintf('%-30s %-20s %-50s %s\\n%s',\t'create_zigbee2mqtt()', `skipped ${zigbeeDev.type}`, iobDev._id, zigbeeDev.friendly_name, JSON.stringify(zigbeeDev, null, 4)));\n\t\t\t\t}\n\n\t\t\t\t// add devConfig\n\t\t\t\tif (accCategory  &&  srvType) {\n\t\t\t\t\tthis.log.debug(sprintf('%-30s %-20s %-50s %s', 'create_zigbee2mqtt()', `created ${zigbeeDev.type}`, iobDev._id, zigbeeDev.friendly_name));\n\t\t\t\t\tconst grpName\t= idPath.slice(0, 2).join('.');\n\t\t\t\t\tconst devName\t= `${grpName}.${zigbeeDev.friendly_name}`;\n\n\t\t\t\t\t// name\n\t\t\t\t\tcharacteristics.push({\n\t\t\t\t\t\t'name': 'Name', 'inOutFunction': 'const', 'inOutParameters': zigbeeDev.friendly_name\n\t\t\t\t\t});\n\n\t\t\t\t\t// accConfig\n\t\t\t\t\tconst accConfig: AccConfig = {\n\t\t\t\t\t\t'configType':\t\t'customdevice',\n\t\t\t\t\t\t'enabled':\t\t\ttrue,\n\t\t\t\t\t\t'groupString':\t\tgrpName,\t\t\t\t// used by adapter only\n\t\t\t\t\t\t'name':\t\t\t\tdevName,\t\t\t\t// NOTE: yahka adapter uses 'name' to build homekit UUID!\n\t\t\t\t\t\t'category':\t\t\taccCategory,\n\t\t\t\t\t\t'manufacturer':\t\tzigbeeDev.definition.vendor,\t\t\t\t\t\t\t\t\t// visible within iOS home app\n\t\t\t\t\t\t'serial':\t\t\tzigbeeDev.ieee_address,\t\t\t\t\t\t\t\t\t\t\t// visible within iOS home app\n\t\t\t\t\t\t'model':\t\t\t`${zigbeeDev.model_id} (${zigbeeDev.definition.model})`,\t\t// visible within iOS home app\n\t\t\t\t\t\t'firmware':\t\t\tzigbeeDev.software_build_id,\t\t\t\t\t\t\t\t\t// visible within iOS home app\n\t\t\t\t\t\t'services':\t\t\t[],\n\t\t\t\t\t};\n\t\t\t\t\taccConfigs.push(accConfig);\n\n\t\t\t\t\t// accService\n\t\t\t\t\tconst accService: AccService = {\n\t\t\t\t\t\t'type': srvType, 'subType': '', 'name': zigbeeDev.friendly_name, 'characteristics':\tcharacteristics\n\t\t\t\t\t};\n\t\t\t\t\taccConfig.services.push(accService);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//this.log.debug(sprintf('%-30s %-20s %-50s\\n%s', 'create_zigbee2mqtt()', 'devConfigs', '', JSON.stringify(devConfigs, null, 4)));\n\t\treturn accConfigs;\n\t}\n\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t} finally {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t// createYahkaConfig(srcInstId, yahkaDstApt)\n\t// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\tasync createYahkaConfig(srcInstId: string, yahkaDstApt: ioBroker.Object): Promise<void> {\t\t// e.g.: [ \"fritzdect.0\", ... ], \"system.adapter.yahka.0\"\n\t\tconst yahkaAptId = yahkaDstApt._id;\n\t\tthis.log.info(sprintf('%-31s %-20s %-50s', 'createYahkaConfig()', 'target', yahkaAptId));\n\t\t//this.log.info(sprintf('%-31s %-20s\\n%s', 'createYahkaConfig()', yahkaAptId, JSON.stringify(srcInsts, null, 4)));\n\n\t\t// collect source state objects\n\t\tconst stateObjs  = await this.getForeignObjectsAsync(`${srcInstId}.*`, 'state')  ||  {};\n\t\tconst statesArr  = Object.values(stateObjs);\n\t\t//this.log.info(sprintf('%-31s %-20s %-50s %s', 'createYahkaConfig()', 'statesArr', '', '\\n'+JSON.stringify(statesArr, null, 4)));\n\n\t\tstatesArr.sort((obj1, obj2) => (obj1._id > obj2._id) ? +1 : ((obj1._id < obj2._id) ? -1 : 0));\n\n\t\t// get yahkaNewDevs and enable/disable yahka configs\n\t\tconst yahkaNewDevs = await this.createYahkaDevs(statesArr);\n\t\tconst yahkaOldDevs = yahkaDstApt['native']['bridge']['devices']\tas {name: string, enabled: boolean}[];\n\t\t//this.log.info(sprintf('%-31s %-20s %-50s %s', 'createYahkaConfig()', dstInst, 'yahkaOldDevs', '\\n'+JSON.stringify(yahkaOldDevs, null, 4)));\n\t\t//this.log.info(sprintf('%-31s %-20s %-50s %s', 'createYahkaConfig()', dstInst, 'yahkaNewDevs', '\\n'+JSON.stringify(yahkaNewDevs, null, 4)));\n\n\t\t// get 'enabled' state from oldDev\t\t-\t\tyahka adapter uses 'name' to build homekit UUID\n\t\tfor (const yahkaNewDev of  yahkaNewDevs) {\n\t\t\tconst  yahkaOldDev  =  yahkaOldDevs.find(oldDev => (oldDev.name === yahkaNewDev.name));\n\t\t\tyahkaNewDev.enabled = (yahkaOldDev) ? yahkaOldDev.enabled : true;\n\t\t}\n\n\t\t// keep custom yahka device configs\t\t-\t\tyahka adapter uses 'name' to build homekit UUID\n\t\tlet yahkaChanged = false;\n\t\tfor (const yahkaOldDev of yahkaOldDevs) {\n\t\t\tconst keep = ! yahkaNewDevs.some((newDev) => (newDev.name === yahkaOldDev.name));\n\t\t\tif (keep) {\n\t\t\t\tthis.log.warn(sprintf('%-31s %-20s %-50s %s', 'createYahkaConfig()', 'keeping', yahkaOldDev.name, ''));\n\t\t\t\tyahkaOldDev.enabled = false;\n\t\t\t\tyahkaNewDevs.push();\n\t\t\t}\n\t\t}\n\n\t\t// yahkaChanged?\t\t\t\t\t\t-\t\tyahka adapter uses 'name' to build homekit UUID\n\t\tyahkaOldDevs.sort(sortBy('name'));\n\t\tyahkaNewDevs.sort(sortBy('name'));\n\t\tconst diff = objDiff(yahkaOldDevs, yahkaNewDevs, 'yahkaDevs');\n\t\tyahkaChanged = yahkaChanged  ||  (Object.values(diff).length > 0);\n\n\t\t// debug\n\t\tif (Object.values(diff).length > 0) {\n\t\t\tthis.log.info(sprintf('%-31s %-20s %-50s %s', 'createYahkaConfig()', yahkaAptId, 'diff', '\\n'+JSON.stringify(diff, null, 4)));\n\t\t}\n\n\t\t// save\n\t\tif (yahkaChanged) {\n\t\t\tthis.log.info(sprintf('%-31s %-20s %-50s %s', 'createYahkaConfig()', yahkaAptId, 'saving yahka devices ...', ''));\n\t\t\t//\tawait this.extendForeignObjectAsync(dstInst, { 'native': { 'bridge': { 'devices': yahkaNewDevs } } });\n\t\t\tyahkaDstApt['native']['bridge']['devices'] = yahkaNewDevs;\n\t\t\tawait this.setForeignObjectAsync(yahkaAptId, yahkaDstApt);\n\t\t}\n\t}\n\n\t// ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t// createYahkaDevs(iobSrcObjs)\n\t// ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\tasync createYahkaDevs(iobSrcObjs: ioBroker.StateObject[]): Promise<{name: string, enabled: boolean}[]> {\t\t// iobSrcObjs: array of iobroker objects\n\t\tthis.log.info(sprintf('%-31s %-20s %-50s', 'createYahkaDevs()', '#'+iobSrcObjs.length, '...'));\n\t\tconst yahkaNewDevs = [];\n\n\t\tif (! Array.isArray(iobSrcObjs)) {\n\t\t\tthis.log.warn(sprintf('%-31s %-20s %-50s %s', 'createYahkaDevs()', 'iobSrcObjs is not an arrray', '', ''));\n\n\t\t} else {\n\t\t\t// process array of iobSrcObjs\n\t\t\tfor (const iobSrcObj of iobSrcObjs) {\n\t\t\t\tconst yahkaNewDev = await this.createYahkaDev(iobSrcObjs, iobSrcObj);\n\t\t\t\tif  ( yahkaNewDev ) {\n\t\t\t\t\tyahkaNewDevs.push(yahkaNewDev);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.log.info(sprintf('%-31s %-20s %-50s', 'createYahkaDevs()', '#'+iobSrcObjs.length, 'done.'));\n\t\treturn yahkaNewDevs;\n\t}\n\n\n\n\t// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t// createYahkaDev(iobSrcObjs, iobSrcObj)\n\t// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\tasync createYahkaDev(iobSrcObjs: ioBroker.StateObject[], iobSrcObj: ioBroker.StateObject): Promise<AccConfig | null > {\t\t// iobObj: iobroker object\n\t\tconst objRole\t\t= iobSrcObj.common.role;\t\t\t\t\t// 'value.temperature'\n\t\tconst objName\t\t= iobSrcObj.common.name as string;\t\t\t// 'OG.K\u00FCche.targettemp'\n\t\tconst objValType\t= iobSrcObj.common.type;\t\t\t\t\t// 'string', 'boolean', 'number', ...\n\t\tconst objId\t\t\t= iobSrcObj._id;\t\t\t\t\t\t\t// 'fritzdect.0.DECT_099950049420.tsoll'\n\t\tconst idPath\t\t= objId.split('.');\t\t\t\t\t\t\t// [ 'fritzdect', '0', 'DECT_099950049420', 'tsoll' ]\n\t\tconst idBase\t\t= idPath.slice(0, -1).join('.');\t\t\t// 'fritzdect.0.DECT_099950049420'\n\t\tconst idLeaf\t\t= idPath.slice(   -1)[0];\t\t\t\t\t//                               'tsoll'\n\t\t//this.log.info(sprintf('%-31s %-20s %-50s', 'createYahkaDev()', objRole, objId));\n\n\t\t// yahka device config\n\t\tconst devCfg: AccConfig = {\n\t\t\t'configType':\t\t'customdevice',\t\t\t\t\t\t\t// buggy: will not show up in iOS\n\t\t\t'name':\t\t\t\tobjId,\t\t\t\t\t\t\t\t\t// NOTE: yahka adapter uses 'name' to build homekit UUID!\n\t\t\t'manufacturer':\t\tidPath.slice(0,2).join('.'),\t\t\t// visible within iOS home app\n\t\t\t'serial':\t\t\tidPath.slice(2  ).join('.'),\t\t\t// visible within iOS home app\n\t\t\t'model':\t\t\tobjName,\t\t\t\t\t\t\t\t// visible within iOS home app\n\t\t\t'services':\t\t\t[],\t\t\t\t\t\t\t\t\t\t// default\n\t\t\t'enabled':\t\t\ttrue,\n\t\t\t'groupString':\t\tidPath.slice(0,2).join('.')\t\t\t\t// used by adapter only\n\t\t};\n\n\n\t\t// ~~~~~~~~~~~~~~~~~~\n\t\t// danfoss-icon state\n\t\t// ~~~~~~~~~~~~~~~~~~\n\t\tif (idPath[0] === 'danfoss-icon') {\n\t\t\t// danfoss-icon HousePause\n\t\t\t// ~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\tif (idLeaf === 'HousePause') {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// objId: danfoss-icon.0.House.HousePause\n\t\t\t\tdevCfg.firmware\t= '';\n\t\t\t\tdevCfg.category = AccCatId.Switch;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'Switch', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'On',\t\t'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': objId }\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t// danfoss-icon room thermostat\n\t\t\t// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t} else if (idLeaf === 'TargetTemp') {\n\t\t\t\tconst nameId\t= `${idBase}.RoomName`;\t\t\t\t\t\t\t\t\t\t\t\t// 'danfoss-icon.0.room-01.RoomName'\n\t\t\t\tconst nameStr\t= (await this.getForeignStateAsync(nameId) || {}).val || 'n/a';\t\t// 'Wohnzimmer'\n\t\t\t\tdevCfg.category\t= AccCatId.Thermostat;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'Thermostat', 'subType': '', 'name': ''+nameStr,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': nameId\t\t\t\t\t},\n\t\t\t\t\t\t\t{ 'name': 'TargetTemperature',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': idBase+'.TargetTemp'\t\t},\n\t\t\t\t\t\t\t{ 'name': 'CurrentTemperature',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': idBase+'.RoomTemp'\t\t},\n\t\t\t\t\t\t\t{ 'name': 'TemperatureDisplayUnits',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': '0', \t\t\t\t\t},\n\t\t\t\t\t\t\t{ 'name': 'TargetHeatingCoolingState',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': '3', \t\t\t\t\t},\n\t\t\t\t\t\t\t{ 'name': 'CurrentHeatingCoolingState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': idBase+'.ValveState',\n\t\t\t\t\t\t\t\t'conversionFunction': 'script', 'conversionParameters': { 'toHomeKit': 'return (value) ? 1 : 2;', 'toIOBroker': 'return (value == 1);' }\n\t\t\t\t\t\t\t}\t\t// TargetHeatingCoolingState:\t\t0 := OFF, 1 := HEAT, 2 := COOL, 3 := AUTO\n\t\t\t\t\t\t]\t\t\t// CurrentHeatingCoolingState:\t\t0 := OFF, 1 := HEAT, 2 := COOL\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\n\t\t// ~~~~~~~~~~~~~~\n\t\t// openweathermap\n\t\t// ~~~~~~~~~~~~~~\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// openweathermap.0.forecast.current.temperature\n\t\t} else if (idPath[0] === 'openweathermap'  &&  idPath[3] === 'current') {\t\t// openweathermap.0.forecast.current.humidity\n\t\t\tconst nameStr\t= objName.split('.').join(' ');\t\t\t\t\t\t\t\t// 'M41 Garten humidity'\n\n\t\t\t// openweathermap current temperature\n\t\t\t// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\tif (idLeaf === 'temperature') {\n\t\t\t\tdevCfg.category = AccCatId.Sensor;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'TemperatureSensor', 'subType': '', 'name': nameStr,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': nameStr\t},\n\t\t\t\t\t\t\t{ 'name': 'CurrentTemperature',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t// openweathermap current humidity\n\t\t\t// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t} else if (idLeaf === 'humidity') {\n\t\t\t\tdevCfg.category = AccCatId.Sensor;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'HumiditySensor', 'subType': '', 'name': nameStr,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': nameStr\t},\n\t\t\t\t\t\t\t{ 'name': 'CurrentRelativeHumidity',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\n\t\t// ~~~~~~~~~~~~\n\t\t// shelly state\n\t\t// ~~~~~~~~~~~~\n\t\t} else if (idPath[0] === 'shelly') {\n\t\t\tconst nameId\t= `${idBase}.ChannelName`;\n\t\t\tconst nameStr\t=    (await this.getForeignStateAsync(nameId) || {}).val || 'n/a';\t\t\t// 'Terrassenlampen'\n\t\t\tdevCfg.firmware\t= ''+(await this.getForeignStateAsync(idPath.slice(0,-2).join('.') + '.version') || {val:'n/a'}).val;\n\n\t\t\t// shelly dimmer\n\t\t\tif (idLeaf === 'brightness') {\t\t\t\t\t\t\t\t\t\t// objId: 'shelly.0.SHDM-2#94B97E16BE61#1.lights.brightness'\n\t\t\t\tdevCfg.category = AccCatId.Lightbulb;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'Lightbulb', 'subType': '', 'name': ''+nameStr,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': nameId\t\t\t\t\t},\n\t\t\t\t\t\t\t{ 'name': 'On',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${idBase}.Switch`\t\t},\n\t\t\t\t\t\t\t{ 'name': 'Brightness',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${idBase}.brightness`\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t// shelly switch\n\t\t\t} else if (idLeaf === 'Switch'  &&  idPath[3].startsWith('Relay')) {\t\t// objId: 'shelly.0.SHPLG-S#6A0761#1.Relay0.Switch'\n\t\t\t\tdevCfg.firmware\t= ''+(await this.getForeignStateAsync(idPath.slice(0,-2).join('.') + '.version') || {val:'n/a'}).val;\n\t\t\t\tdevCfg.category = AccCatId.Switch;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'Switch', 'subType': '', 'name': ''+nameStr,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': nameId\t},\n\t\t\t\t\t\t\t{ 'name': 'On',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\n\t\t// ~~~~~~~~~~~~\n\t\t// sonoff state\n\t\t// ~~~~~~~~~~~~\n\t\t} else if (idPath[0] === 'sonoff'  &&  [ 'POWER1', 'POWER2', 'SI7021_Temperature', 'SI7021_Humidity' ].indexOf(idLeaf) >= 0) {\n\t\t\t// Sonoff Device Name\n\t\t\tconst nameStr\t=    (await this.getForeignStateAsync(`${idBase}.DeviceName`\t\t) || {}).val  ||  'n/a';  // 'Keller Sensor'\n\t\t\tdevCfg.firmware\t= ''+(await this.getForeignStateAsync(`${idBase}.INFO.Info1_Version`) || {}).val  ||  'n/a';  // '12.1.1(tasmota)'\n\n\t\t\t// sonoff POWER1, POWER2\n\t\t\t// ~~~~~~~~~~~~~~~~~~~~~\n\t\t\tif ([ 'POWER1', 'POWER2' ].indexOf(idLeaf) >= 0) {\n\t\t\t\tdevCfg.category = AccCatId.Switch;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'Switch', 'subType': '', 'name': ''+nameStr,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${idBase}.DeviceName`\t},\n\t\t\t\t\t\t\t{ 'name': 'On',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t// sonoff state value.temperature\n\t\t\t// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t} else if (idLeaf === 'SI7021_Temperature') {\n\t\t\t\tdevCfg.category = AccCatId.Sensor;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'TemperatureSensor', 'subType': '', 'name': ''+nameStr,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${idBase}.DeviceName`\t},\n\t\t\t\t\t\t\t{ 'name': 'CurrentTemperature',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t\t\t\t\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t// sonoff state value.humidity\n\t\t\t// ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t\t} else if (idLeaf === 'SI7021_Humidity') {\n\t\t\t\tdevCfg.category = AccCatId.Sensor;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'HumiditySensor', 'subType': '', 'name': ''+nameStr,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${idBase}.DeviceName`\t},\n\t\t\t\t\t\t\t{ 'name': 'CurrentRelativeHumidity',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t\t\t\t\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\n\t\t// ~~~~~~~~~~~~~~~~~~~\n\t\t// kernel state switch\n\t\t// ~~~~~~~~~~~~~~~~~~~\n\t\t} else if (idPath[0] === 'kernel'  &&  objRole  === 'switch') {\n\t\t\tdevCfg.category = AccCatId.Switch;\n\t\t\tdevCfg.services = [\n\t\t\t\t{\n\t\t\t\t\t'type': 'Switch', 'subType': '', 'name': objName,\t\t\t\t\t// objName:\t\te.g. 'Albi da'\n\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t{ 'name': 'Name',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t{ 'name': 'On',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t];\n\n\t\t// ~~~~~~~~~~~~~~~~~~~~~~~\n\t\t// kernel state sensor.lux\n\t\t// ~~~~~~~~~~~~~~~~~~~~~~~\n\t\t} else if (idPath[0] === 'kernel'  &&  objRole === 'sensor.lux') {\n\t\t\tdevCfg.category = AccCatId.Sensor;\n\t\t\tdevCfg.services = [\n\t\t\t\t{\t// LightSensor\n\t\t\t\t\t'type': 'LightSensor', 'subType': '', 'name': objName,\t\t// objName:\t\te.g. ''\n\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t{ 'name': 'CurrentAmbientLightLevel',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t];\n\n\t\t// ~~~~~~~~~\n\t\t// fritzdect\n\t\t// ~~~~~~~~~\n\t\t} else if (idPath[0] === 'fritzdect'  &&  [ 'tsoll', 'tist', 'celsius' ].includes(idLeaf)) {\t\t\t\t\t// 'fritzdect.0.......'\n\t\t\tconst nameStr\t=    (await this.getForeignStateAsync(`${idBase}.name`\t\t\t) || {}).val ||\t'n/a';\t\t// 'K\u00FCche OG'\n\t\t\tdevCfg.model\t= ''+(await this.getForeignStateAsync(`${idBase}.productname`\t) || {}).val ||\t'n/a';\t\t// 'FRITZ!DECT 301'\n\t\t\tdevCfg.firmware\t= ''+(await this.getForeignStateAsync(`${idBase}.fwversion`\t\t) || {}).val ||\t'n/a';\t\t// '05.02'\n\n\t\t\t// FRITZ!DECT 301\n\t\t\tif (devCfg.model === 'FRITZ!DECT 301') {\n\n\t\t\t\t// FRITZ!DECT 301 - Thermostat Device\n\t\t\t\tif (idLeaf === 'tsoll') {\n\t\t\t\t\tdevCfg.category\t= AccCatId.Thermostat;\n\t\t\t\t\tdevCfg.services = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'type': 'Thermostat', 'subType': '', 'name': ''+nameStr,\n\t\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t\t{ 'name': 'TemperatureDisplayUnits',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': '0'\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${idBase}.name`\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ 'name': 'TargetTemperature',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${idBase}.tsoll`\t\t\t\t},\n\t\t\t\t\t\t\t\t{ 'name': 'CurrentTemperature',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${idBase}.celsius` \t\t\t\t},\n\t\t\t\t\t\t\t\t{ 'name': 'TargetHeatingCoolingState',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': '3', \t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ 'name': 'CurrentHeatingCoolingState', 'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${idBase}.heatingCoolingState`\t},\n\t\t\t\t\t\t\t]\t\t// TargetHeatingCoolingState:\t\t0 := OFF, 1 := HEAT, 2 := COOL, 3 := AUTO\n\t\t\t\t\t\t},\t\t\t// CurrentHeatingCoolingState:\t\t0 := OFF, 1 := HEAT, 2 := COOL\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'type': 'BatteryService', 'subType': '', 'name': ''+nameStr,\n\t\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t\t{ 'name': 'ChargingState',\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': '2'\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ 'name': 'BatteryLevel',\t\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${idBase}.battery`\t\t},\n\t\t\t\t\t\t\t\t//{ 'name': 'StatusLowBattery',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${idBase}.batterylow`\t},\n\t\t\t\t\t\t\t\t{ 'name': 'StatusLowBattery',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${idBase}.battery`,\n\t\t\t\t\t\t\t\t\t'conversionFunction': 'script', 'conversionParameters': { 'toHomeKit': 'return (value <= 20);', 'toIOBroker': 'return false;' }\n\t\t\t\t\t\t\t\t}\t// fritzdect battery (level) [%]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\n\t\t\t\t// FRITZ!DECT 301 - Thermostat Temperature Sensor\n\t\t\t\t} else if (idLeaf === 'tist') {\n\t\t\t\t\tdevCfg.category\t= AccCatId.Thermostat;\n\t\t\t\t\tdevCfg.services = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'type': 'TemperatureSensor', 'subType': '', 'name': ''+nameStr,\n\t\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t\t{ 'name': 'CurrentTemperature',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${idBase}.tist`\t},\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t// FRITZ!DECT 200 Switch\n\t\t\t} else if (devCfg.model === 'FRITZ!DECT 200'  &&  idLeaf === 'celsius') {\n\t\t\t\tdevCfg.category = AccCatId.Switch;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'Switch', 'subType': '', 'name': ''+nameStr,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${idBase}.name`\t\t},\n\t\t\t\t\t\t\t{ 'name': 'On',\t\t\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${idBase}.state`\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'TemperatureSensor', 'subType': '', 'name': ''+nameStr,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'CurrentTemperature',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': `${idBase}.celsius`\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t// FRITZ!DECT Repeater 100\n\t\t\t} else if (devCfg.model === 'FRITZ!DECT Repeater 100'  &&  idLeaf === 'celsius') {\n\t\t\t\tdevCfg.category = AccCatId.Sensor;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'TemperatureSensor', 'subType': '', 'name': ''+nameStr,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${idBase}.name`\t\t},\n\t\t\t\t\t\t\t{ 'name': 'CurrentTemperature',\t'inOutFunction': 'ioBroker.State.OnlyACK', 'inOutParameters': `${idBase}.celsius`\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t} else {\n\t\t\t\tthis.log.warn(sprintf('%-15s %-25s %-45s %s', 'ConfigureYahka', 'createYahkaDev()', objId, 'not implemented yet'));\n\t\t\t}\n\n\t\t// ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t// tr064 boolean state/button\n\t\t// ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t} else if (idPath[0] === 'tr-064'  &&  idPath[2] == 'states'  &&  (objRole === 'state'  ||  objRole === 'button')) {\n\t\t\tif (objValType === 'boolean'  &&  idLeaf !== 'wlan') {\t\t\t\t\t\t// idPath: e.g.:\t'tr-064.0.states.wps'\n\t\t\t\tdevCfg.category\t= AccCatId.Switch;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'Switch', 'subType': '', 'name': devCfg.model,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': devCfg.model\t},\n\t\t\t\t\t\t\t{ 'name': 'On',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\n\t\t// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t// switchboard-io boolean switch / contact sensor\n\t\t// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t} else if (idPath[0] === '0_userdata'  &&  idPath[2] === 'pin') {\n\t\t\tif (objRole === 'door.lock') {\n\t\t\t\tdevCfg.category\t= AccCatId.Door_lock;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'LockMechanism', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ 'name': 'LockTargetState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId,\t\t\t'conversionFunction': 'invert'\t},\n\t\t\t\t\t\t\t{ 'name': 'LockCurrentState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId+'_status',\t'conversionFunction': 'invert'\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t} else if (objRole === 'garage.opener') {\n\t\t\t\tdevCfg.category\t= AccCatId.Door_lock;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'GarageDoorOpener', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{ 'name': 'TargetDoorState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId,\t\t\t'conversionFunction': 'invert'\t},\n\t\t\t\t\t\t\t{ 'name': 'CurrentDoorState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId+'_status',\t'conversionFunction': 'invert'\t},\n\t\t\t\t\t\t\t{ 'name': 'ObstructionDetected','inOutFunction': 'const',\t\t\t\t\t'inOutParameters': false\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t} else if (objRole === 'switch.light') {\n\t\t\t\tdevCfg.category = AccCatId.Switch;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'Switch', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'On',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t} else if (objRole === 'switch.fan') {\n\t\t\t\tdevCfg.category = AccCatId.Fan;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'Fan', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'On',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t} else if (objRole === 'sensor.leak') {\n\t\t\t\tdevCfg.category = AccCatId.Sensor;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'LeakSensor', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'LeakDetected',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t} else if (objRole === 'sensor.motion') {\n\t\t\t\tdevCfg.category = AccCatId.Sensor;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'MotionSensor', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'MotionDetected',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t} else if (objRole === 'sensor.occupancy') {\n\t\t\t\tdevCfg.category = AccCatId.Sensor;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'OccupancySensor', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'OccupancyDetected',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t} else if (objRole === 'indicator') {\n\t\t\t\tdevCfg.category = AccCatId.Sensor;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'ContactSensor', 'subType': '', 'name': objName,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': objName\t},\n\t\t\t\t\t\t\t{ 'name': 'ContactSensorState',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t} else {\n\t\t\t\tthis.log.debug(sprintf('%-30s %-20s %s (role \"%s\" not implemtented)', 'createYahkaDev()', 'ignored', objId, objRole));\n\t\t\t}\n\n\n\t\t// ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t// tr064 devices active state\n\t\t// ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t} else if (idPath[0] === 'tr-064'  &&  idPath[2] == 'devices'  &&  idLeaf == 'active'  &&  objRole === 'state') {\n\t\t\tconst nameStr\t= idPath[idPath.length - 2];\t\t\t\t\t// devCfg.name:\te.g.:\t'iPhone-Albi'\n\t\t\tdevCfg.category\t= AccCatId.Sensor;\n\t\t\tdevCfg.services = [\n\t\t\t\t{\n\t\t\t\t\t'type': 'OccupancySensor', 'subType': '', 'name': nameStr,\n\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': nameStr\t},\n\t\t\t\t\t\t{ 'name': 'OccupancyDetected',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t];\n\t\t\t/*\n\t\t\t\t\t'type': \"ContactSensor\", 'subType': '', 'name': nameStr,\n\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': nameStr\t},\n\t\t\t\t\t\t{ 'name': \"ContactSensorState\",\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t\t}\n\t\t\t\t\t]\n\t\t\t\t\t'type': \"OccupancySensor\", 'subType': '', 'name': nameStr,\n\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': nameStr\t},\n\t\t\t\t\t\t{ 'name': \"OccupancyDetected\",\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t\t}\n\t\t\t\t\t]\n\t\t\t\t\t'type': \"Switch\", 'subType': '', 'name': nameStr,\n\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': nameStr\t},\n\t\t\t\t\t\t{ 'name': 'On',\t\t\t\t\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t\t}\n\t\t\t\t\t]\n\t\t\t\t\t'type': \"Doorbell\", 'subType': '', 'name': nameStr,\n\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': nameStr\t},\n\t\t\t\t\t\t{ 'name': \"ProgrammableSwitchEvent\",\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t\t}\n\t\t\t\t\t]\n\t\t\t\t\t'type': \"OccupancySensor\", 'subType': '', 'name': nameStr,\n\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': nameStr\t},\n\t\t\t\t\t\t{ 'name': \"OccupancyDetected\",\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t\t}\n\t\t\t\t\t]\n\t\t\t\t\t'type': \"MotionSensor\", 'subType': '', 'name': nameStr,\n\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': nameStr\t},\n\t\t\t\t\t\t{ 'name': \"MotionDetected\",\t\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': objId\t\t}\n\t\t\t\t\t]\n\t\t\t*/\n\n\t\t/*\n\t\t// ~~~~~~~~~\n\t\t// hue level\n\t\t// ~~~~~~~~~\n\t\t} else if (idPath[0] === 'hue'  &&  idLeaf === 'level') {\t\t\t\t\t\t// hue.0_P17.Philips_hue.Fensterlampe.level\n\t\t\tconst channelObj = await this.getForeignObjectAsync(idBase);\t\t\t\t// hue.0_P17.Philips_hue.Fensterlampe\n\n\t\t\tif (channelObj.common.role !== 'Room') {\n\t\t\t\tconst hueRole\t= channelObj['common'].role.replace(/\\./g, '_');\t\t// light_color\n\t\t\t\tconst hueId\t\t= channelObj['native'].id;\t\t\t\t\t\t\t\t// 4\n\t\t\t\tconst nameStr\t= channelObj['native'].name;\t\t\t\t\t\t\t// Fensterlampe\n\t\t\t\tidPath[3]\t\t= hueRole + '_' + hueId;\n\t\t\t\tdevCfg.model\t= idPath.slice(2, 4).join('.');\t\t\t\t\t\t\t// Philips_hue.Fensterlampe\n\n\t\t\t\t// hue level\n\t\t\t\t// ~~~~~~~~~\n\t\t\t\tdevCfg.category = AccCatId.Lightbulb;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'Lightbulb', 'subType': '', 'name': nameStr,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t'inOutFunction': 'const',\t\t\t\t\t\t'inOutParameters': nameStr\t\t\t},\n\t\t\t\t\t\t\t{ 'name': 'On',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t\t'inOutParameters': idBase+'.on'\t\t},\n\t\t\t\t\t\t\t{ 'name': 'Brightness',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t\t'inOutParameters': idBase+'.level'\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\n\t\t// ~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t// hue-extended lights level\n\t\t// ~~~~~~~~~~~~~~~~~~~~~~~~~\n\t\t} else if (idPath[0] === 'hue-extended'  &&  idPath[2] === 'lights'  &&  idPath[4] === 'action'  &&  idLeaf === 'level') {\t\t\t\t// hue.0_P17.Philips_hue.Fensterlampe.level\n\t\t\tthis.log.warn(sprintf('%-31s %-20s %-50s', 'createYahkaDev()', 'not implemented', objId));\n\n\t\t// ~~~~~~~~~~~~~~~~~~\n\t\t// tradfri brightness\t\t-\t\tNOTE: not needed because tradfri exposes it's own homekit bridge!\n\t\t// ~~~~~~~~~~~~~~~~~~\n\t\t} else if (idPath[0] === 'tradfri'  &&  idLeaf === 'brightness') {\t\t\t\t\t\t// tradfri.0.L-65551.lightbulb.brightness\n\t\t\tconst deviceObj = await this.getForeignObjectAsync(idPath.slice(0, 3).join('.'));\t// tradfri.0.L-65551\n\t\t\tthis.log.info(sprintf('%-31s %-20s %-50s %s deviceObj %s', 'createYahkaDev()', objRole, idBase, idLeaf, JSON.stringify(deviceObj, null, 4)));\n\n\t\t\tif (deviceObj.native.type === 'lightbulb') {\n\t\t\t\tconst nameStr\t\t= deviceObj.common.name;\t\t\t\t\t\t\t\t\t// Fensterlampe\n\t\t\t\tdevCfg.manufacturer\t= deviceObj.native.manufacturer;\t\t\t\t\t\t\t// IKEA of Sweden\n\t\t\t\tdevCfg.model\t\t= deviceObj.native.modelNumber;\t\t\t\t\t\t\t\t// TRADFRI bulb E14 WS 470lm\n\t\t\t\tdevCfg.firmware\t\t= deviceObj.native.firmwareVersion;\t\t\t\t\t\t\t// 2.3.08\n\n\t\t\t\t// hue level\n\t\t\t\t// ~~~~~~~~~\n\t\t\t\tdevCfg.category = AccCatId.Lightbulb;\n\t\t\t\tdevCfg.services = [\n\t\t\t\t\t{\n\t\t\t\t\t\t'type': 'Lightbulb', 'subType': '', 'name': nameStr,\n\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t{ 'name': 'Name',\t\t'inOutFunction': 'const',\t\t\t\t\t\t'inOutParameters': nameStr\t\t\t\t},\n\t\t\t\t\t\t\t{ 'name': 'On',\t\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t\t'inOutParameters': `${idBase}.state`\t\t},\n\t\t\t\t\t\t\t{ 'name': 'Brightness',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t\t'inOutParameters': `${idBase}.brightness`\t},\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\n\t\t// ~~~~~\n\t\t// zwave\n\t\t// ~~~~~\n\t\t} else if (idPath[0] === 'zwave') {\n\t\t\tconst nodeId   = idPath.slice(0, 3).join('.');\t\t\t\t\t// zwave.0.NODE3\n\t\t\tconst switchId = nodeId + '.SWITCH_BINARY.Switch_1';\t\t\t// zwave.0.NODE3.SWITCH_BINARY.Switch_1\n\t\t\tconst levelId  = nodeId + '.SWITCH_MULTILEVEL.Level_1';\t\t\t// zwave.0.NODE7.SWITCH_MULTILEVEL.Level_1\n\t\t\tdevCfg.model = idPath.slice(2, 4).join('.');\t\t\t\t\t//         NODE7.SWITCH_MULTILEVEL\n\n\t\t\tif (objId === switchId  ||  objId === levelId) {\n\t\t\t\t//const switchObj = (objId === switchId) ? iobObj :\tawait this.getForeignObjectAsync(switchId);\n\t\t\t\tconst nodeObj   =\t\t\t\t\t\t\t\t\tawait this.getForeignObjectAsync(nodeId);\n\t\t\t\tconst devName\t= nodeObj.common.name;\n\n\t\t\t\t// product \"FGWPE/F Wall Plug\",\t\t\t\t\t\t\tproducttype \"0x0600\",  productid \"0x1000\",  type \"Binary Switch\"\n\t\t\t\t// product \"FGWPE/F Wall Plug\",\t\t\t\t\t\t\tproducttype \"0x0600\",  productid \"0x1000\",  type \"Binary Power Switch\"\n\t\t\t\tif (objId === switchId  &&  nodeObj['native'].productid === '0x1000') {\n\t\t\t\t\tdevCfg.category = AccCatId.Switch;\n\t\t\t\t\tdevCfg.services = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'type': 'Switch', 'subType': '', 'name': nameStr,\n\t\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t\t{ 'name': 'Name',\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': devName\t},\n\t\t\t\t\t\t\t\t{ 'name': 'On',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': switchId\t},\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\n\t\t\t\t// product \"FGD211 Universal Dimmer 500W\",\t\t\t\tproducttype \"0x0100\",  productid \"0x100a\",  type \"Multilevel Power Switch\"\n\t\t\t\t} else if (objId === levelId  &&  nodeObj['native'].type === 'Multilevel Power Switch') {\n\t\t\t\t\tdevCfg.category = AccCatId.Lightbulb;\n\t\t\t\t\tdevCfg.services = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'type': 'Lightbulb', 'subType': '', 'name': nameStr,\n\t\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t\t{ 'name': 'Name',\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': devName\t\t\t},\n\t\t\t\t\t\t\t\t{ 'name': 'Brightness',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': levelId,\n\t\t\t\t\t\t\t\t\t'conversionFunction':\t'script',\n\t\t\t\t\t\t\t\t\t'conversionParameters': {\n\t\t\t\t\t\t\t\t\t\t'toHomeKit':\t\t'return Math.min(100, Math.round(100 * value/ 99));',\n\t\t\t\t\t\t\t\t\t\t'toIOBroker':\t\t'return Math.min( 99, Math.round( 99 * value/100));',\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t//\"conversionFunction\": \"scaleInt\",\n\t\t\t\t\t\t\t\t\t//\"conversionParameters\": JSON.stringify({\n\t\t\t\t\t\t\t\t\t//\t'homekit.max':\t\t100,\n\t\t\t\t\t\t\t\t\t//\t'iobroker.max':\t\t99\n\t\t\t\t\t\t\t\t\t//})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t\t//\tconst levelObj  = (objId === levelId ) ? iobObj \t: await this.getForeignObjectAsync(levelId);\n\t\t\t\t\tconst switchObj = (objId === switchId) ? iobSrcObj\t: await this.getForeignObjectAsync(switchId);\n\t\t\t\t\tif (switchObj) {\n\t\t\t\t\t\tdevCfg.services[0].characteristics.push({\n\t\t\t\t\t\t\t'name':\t\t\t\t\t'On',\n\t\t\t\t\t\t\t'inOutFunction':\t\t'ioBroker.State.OnlyACK',\n\t\t\t\t\t\t\t'inOutParameters':\t\tswitchId\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdevCfg.services[0].characteristics.push({\n\t\t\t\t\t\t\t'name':\t\t\t\t\t'On',\n\t\t\t\t\t\t\t'inOutFunction':\t\t'ioBroker.State.OnlyACK',\n\t\t\t\t\t\t\t'inOutParameters':\t\tlevelId,\n\t\t\t\t\t\t\t'conversionFunction':\t'script',\n\t\t\t\t\t\t\t'conversionParameters': {\n\t\t\t\t\t\t\t\t'toHomeKit':\t\t'return (value) ? true : false;',\n\t\t\t\t\t\t\t\t'toIOBroker':\t\t'return (value) ?   99 :     0;'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t// product \"FGRM222 Roller Shutter Controller 2\",\t\tproducttype \"0x0301\",  productid \"0x1001\",  type \"Motor Control Class B\"\n\t\t\t\t} else if (objId === levelId  &&  nodeObj['native'].type === 'Motor Control Class B') {\n\t\t\t\t\tdevCfg.category = AccCatId.Window_covering;\n\t\t\t\t\tdevCfg.services = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'type': 'WindowCovering', 'subType': '', 'name': nameStr,\n\t\t\t\t\t\t\t'characteristics': [\n\t\t\t\t\t\t\t\t{ 'name': 'Name',\t\t\t\t'inOutFunction': 'const',\t\t\t\t\t'inOutParameters': devName\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ 'name': 'TargetPosition',\t\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': levelId,\n\t\t\t\t\t\t\t\t\t'conversionFunction': 'scaleInt', 'conversionParameters': '{ \"homekit.max\": 100, \"iobroker.max\": 99 }'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ 'name': 'CurrentPosition',\t'inOutFunction': 'ioBroker.State.OnlyACK',\t'inOutParameters': levelId,\n\t\t\t\t\t\t\t\t\t'conversionFunction': 'scaleInt', 'conversionParameters': '{ \"homekit.max\": 100, \"iobroker.max\": 99 }'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ 'name': 'PositionState',\t\t'inOutFunction': 'const',\t\t\t'inOutParameters': '2'\t\t\t\t\t\t},\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t*/\n\t\t}\n\n\t\t// enable all characteristics\n\t\tfor (const srv of devCfg.services) {\n\t\t\tfor (const chr of srv.characteristics) {\n\t\t\t\tchr.enabled = true;\n\t\t\t}\n\t\t}\n\n\t\tif (devCfg.services.length > 0) {\n\t\t\tthis.log.info(sprintf('%-31s %-20s %-50s', 'createYahkaDev()', 'created', devCfg.name));\n\t\t}\n\n\t\treturn (devCfg.services.length > 0) ? devCfg : null;\n\t}\n}\n\n\n// ~~~~~~~~~~~\n// sortBy(key)\n// ~~~~~~~~~~~\nfunction sortBy(key: string) {\n\treturn (a: {[index: string]: any}, b: {[index: string]: any}) => (a[key] > b[key]) ? +1 : ((a[key] < b[key]) ? -1 : 0);\n}\n\n\n// ~~~~~~~~~~~~~~~~~~~~~~~\n// objDiff(oldObj, newObj)\n// ~~~~~~~~~~~~~~~~~~~~~~~\ninterface DiffObj {\n\t[index: string]: {\n\t\told?:\tobject,\n\t\tnew?:\tobject,\n\t}\n}\nfunction objDiff(oldObj: {[index: string]: any}, newObj: {[index: string]: any}, path = '', diff: DiffObj = {}): object {\t\t// check if newObj values are same in oldObj\n\t//adapter.log.info(sprintf('%-30s %-20s %-50s %s', 'objDiff()', 'path', path, ''));\n\tif (oldObj === undefined) {\n\t\tdiff[path] = { 'new': newObj };\n\n\t} else if (newObj === undefined) {\n\t\tdiff[path] = { 'old': oldObj };\n\n\t} else if (Array.isArray(newObj)) {\n\t\tnewObj.forEach((val, idx) => {\n\t\t\tobjDiff(oldObj[idx], newObj[idx], path+'['+idx+']', diff);\n\t\t});\n\n\t} else if (newObj instanceof Object) {\n\t\tObject.keys(newObj).forEach((key) => {\t\t\t\t// loop trough newObj members\n\t\t\tobjDiff(oldObj[key], newObj[key], path+'.'+key, diff);\n\t\t});\n\n\t} else if (! Object.is(oldObj, newObj)) {\n\t\tdiff[path] = { 'old': oldObj, 'new': newObj };\n\t}\n\n\treturn diff;\n}\n\n\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new YahkaConfig(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new YahkaConfig())();\n}\n"],
  "mappings": "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",
  "names": ["YahkaIoPkgJson", "mqtt", "_pkt"]
}
