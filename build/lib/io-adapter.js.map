{
  "version": 3,
  "sources": ["../../../ioBroker.io-lib/io-adapter.ts"],
  "sourcesContent": ["export type\t\t{\tAdapterOptions\t}\tfrom '@iobroker/adapter-core';\nimport { Adapter,\tAdapterOptions\t}\tfrom '@iobroker/adapter-core';\nimport { Mutex }\t\t\tfrom 'async-mutex';\nimport { sprintf }\t\t\tfrom 'sprintf-js';\nimport   jsonStringify\t\tfrom 'json-stable-stringify';\n\n\n// see also\n//\t\thttps://github.com/ioBroker/ioBroker/wiki/Adapter-Development-Documentation#structure-of-io-packagejson\n//\t\thttps://github.com/ioBroker/ioBroker.js-controller/blob/master/packages/adapter/src/lib/adapter/adapter.ts\n\n// dateStr(ts)\nexport function dateStr(ts: number = Date.now()): string {\n\tconst  d = new Date(ts);\n\treturn sprintf('%02d.%02d.%04d %02d:%02d:%02d', d.getDate(), d.getMonth() + 1, d.getFullYear(), d.getHours(), d.getMinutes(), d.getSeconds());\n}\n\n// valStr(ts)\nexport function valStr(val: ioBroker.StateValue): string {\t\t\t\t\t// val: string | number | boolean | null\n\tif\t\t(typeof val ===\t'number'\t)\t{ return isFinite(val) ? (Math.round(val*1e6)/1e6).toString() : val.toString(); }\n\telse if (typeof val ===\t'boolean'\t)\t{ return val ? 'ON' : 'OFF';\t}\n\telse if (typeof val === 'string'\t)\t{ return val;\t\t\t\t\t}\n\telse\t\t\t\t\t\t\t\t\t{ return JSON.stringify(val);\t}\n}\n\n\n// StateValType, StateChange, StateChangeCb\nexport type\t\t\tValType\t\t\t= number | boolean | string;\nexport interface\tStateChange\t\t{ val: ValType, ack: boolean, ts: number }\ntype \t\t\t\tStateChangeCb\t= (stateChange: StateChange) => void | Promise<void>;\n\n// StateChangeOpts\ninterface StateChangeOpts {\n\tstateId: \t\tstring,\n\tcb:\t\t\t\tStateChangeCb,\n\tval?:\t\t\tValType,\t\t\t// subscribe only to this val\n\tack?:\t\t\tboolean,\t\t\t// subscribe only to this ack\n};\n\n// WriteStateObj\ntype StateObjCommon\t\t= ioBroker.SettableStateObject['common'];\t\t// FIXME: use ioBroker.StateCommon\ninterface HistoryObj {\n\t'enabled':\t\t\t\t\t\tboolean,\t\t// false\n\t'counter'?:\t\t\t\t\t\tboolean,\t\t// false\t\tCounter\n\t'debounceTime'?:\t\t\t\tnumber,\t\t\t// 0\t\t\tOnly logs the value if it stays unchanged for X ms\n\t'blockTime'?:\t\t\t\t\tnumber,\t\t\t// 0\t\t\tIgnore all new values for X ms after last logged value\n\t'changesOnly'?:\t\t\t\t\tboolean,\t\t// true\t\t\tRecord changes only\n\t'changesRelogInterval'?:\t\tnumber,\t\t\t// 0 \t\t\tRecord the same values (seconds)\n\t'changesMinDelta'?:\t\t\t\tnumber,\t\t\t// 0\t\t\tMinimum difference from last value\n\t'ignoreBelowNumber'?:\t\t\tstring,\t\t\t// ''\t\t\tIgnore values below\n\t'disableSkippedValueLogging'?:\tboolean,\t\t// false\t\tDisable charting optimized logging of skipped values\n\t'retention'?:\t\t\t\t\tnumber,\t\t\t// 0 \t\t\tStorage retention (seconds)\n\t'maxLength'?:\t\t\t\t\tnumber,\t\t\t// 0\t\t\tmaximum datapoint count in RAM\n\t'enableDebugLogs'?:\t\t\t\tboolean,\t\t// false\t\tEnable enhanced debug logs for the state\n//\t'ignoreAboveNumber'?:\t\t\tstring,\t\t\t// \t\t\t\tIgnore values above\n//\t'round'?:\t\t\t\t\t\tstring,\t\t\t// \t\t\t\tOn query round numbers to\n}\nexport interface IoStateObj {\n\tcommon:\t\t\tPartial<StateObjCommon> & { name: string, type: 'number'|'boolean'|'string' },\n\tnative?:\t\tioBroker.SettableStateObject['native'],\n\thistory?:\t\tHistoryObj,\n}\n\n\n// ~~~~~~~~~\n// IoAdapter\n// ~~~~~~~~~\nexport class IoAdapter extends Adapter {\n\tprivate static\tself:\t\t\t\tIoAdapter;\n\tpublic\t\t\thistoryId\t\t\t\t\t\t\t\t\t\t\t\t\t= '';\t\t// 'sql.0'\n\tprivate\t\t\tstateChangeSpecs:\tRecord<string, StateChangeOpts[]>\t\t= {};\t\t// by stateId\n\tprivate\t\t\tstateObject:\t\tRecord<string, ioBroker.StateObject>\t= {};\t\t// by stateId\n\tprivate\t\t\tmutex\t\t\t\t\t\t\t\t\t\t\t\t\t\t= new Mutex();\n\tprivate\t\t\tsaveConfig:\t\t\tboolean;\n\tpublic logf = {\n\t\t'silly':\t(_fmt: string, ..._args: unknown[]): void => { /* empty */ },\n\t\t'info':\t\t(_fmt: string, ..._args: unknown[]): void => { /* empty */ },\n\t\t'debug':\t(_fmt: string, ..._args: unknown[]): void => { /* empty */ },\n\t\t'warn':\t\t(_fmt: string, ..._args: unknown[]): void => { /* empty */ },\n\t\t'error':\t(_fmt: string, ..._args: unknown[]): void => { /* empty */ },\n\t};\n\n\tpublic static get(): IoAdapter {\n\t\treturn IoAdapter.self;\n\t}\n\n\t/**\n\t *\n\t * @param options\n\t */\n\tpublic constructor(options: AdapterOptions) {\n\t\tsuper(options);\n\t\tIoAdapter.self  = this;\n\t\tthis.saveConfig = false;\n\n\t\t// on ready\n\t\t// ~~~~~~~~\n\t\tthis.on('ready', async () => {\n\t\t\ttry {\n\t\t\t\tawait this.setState('info.connection', false, true);\n\n\t\t\t\t// unhandledRejection\n\t\t\t\tprocess.on('unhandledRejection', (reason: string, p: Promise<unknown>) => {\n\t\t\t\t\tthis.log.error(`unhandledRejection ${reason} ${JSON.stringify(p, null, 4)} ${(new Error('')).stack ?? ''}`);\n\t\t\t\t});\n\n\t\t\t\t// uncaughtException\n\t\t\t\tprocess.on('uncaughtException', (err, origin) => {\n\t\t\t\t\tthis.log.error(`uncaughtException ${err}\\n${origin}`);\n\t\t\t\t});\n\n\t\t\t\t// logf\n\t\t\t\tconst pad = ' '.repeat(Math.max(0, 16 - this.namespace.length));\n\t\t\t\tthis.logf.silly\t\t= (fmt: string, ...args) => { this.log.silly(sprintf(pad\t\t+ fmt, ...args)); };\n\t\t\t\tthis.logf.info\t\t= (fmt: string, ...args) => { this.log.info (sprintf(pad+' '\t+ fmt, ...args)); };\n\t\t\t\tthis.logf.debug\t\t= (fmt: string, ...args) => { this.log.debug(sprintf(pad\t\t+ fmt, ...args)); };\n\t\t\t\tthis.logf.warn\t\t= (fmt: string, ...args) => { this.log.warn (sprintf(pad+' '\t+ fmt, ...args)); };\n\t\t\t\tthis.logf.error\t\t= (fmt: string, ...args) => { this.log.error(sprintf(pad\t\t+ fmt, ...args)); };\n\n\t\t\t\t// historyId\n\t\t\t\tconst systemConfig = await this.getForeignObjectAsync('system.config');\n\t\t\t\tthis.historyId = systemConfig?.common.defaultHistory  ??  '';\n\n\t\t\t\t// call onReady()\n\t\t\t\tawait this.onReady();\n\t\t\t\tawait this.setState('info.connection', true, true);\n\n\t\t\t\t// save config and restart adapter\n\t\t\t\tif (this.saveConfig) {\n\t\t\t\t\tawait this.updateConfig(this.config);\t\t\t// don't await here; will restart adapter\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t} catch (e: unknown) {\n\t\t\t\tconst stack = (e instanceof Error) ? (e.stack ?? '') : JSON.stringify(e);\n\t\t\t\tthis.log.error(stack);\n\t\t\t\tawait this.setState('info.connection', false, true);\n\t\t\t}\n\t\t});\n\n\t\t// on stateChange\n\t\t// ~~~~~~~~~~~~~~\n\t\tthis.on('stateChange', (stateId: string, stateChange: ioBroker.State | null | undefined) => {\n\t\t\tvoid this.runExclusive(async () => {\t\t\t\t// don't await here; handle state changes one-by-one!\n\t\t\t\tif (stateChange) {\n\t\t\t\t\tconst { val, ack, ts } = stateChange;\n\t\t\t\t\tif (val === null) {\n\t\t\t\t\t\tthis.logf.warn('%-15s %-15s %-10s %-50s', this.constructor.name, 'onChange()', 'val null', stateId);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this.onChange(stateId, { val, ack, ts });\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.logf.warn('%-15s %-15s %-10s %-50s', this.constructor.name, 'onChange()', 'deleted',  stateId);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// on unload\n\t\t// ~~~~~~~~~\n\t\tthis.on('unload', async (callback: () => void) => {\n\t\t\ttry\t\t\t\t\t{ await this.onUnload();\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\tcatch (e: unknown)\t{ this.log.error((e instanceof Error) ? (e.stack ?? '') : JSON.stringify(e));\t}\n\t\t\tfinally\t\t\t\t{ callback();\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t});\n\n\t\t// this.on('objectChange',\tthis.onObjectChange.bind(this));\n\t\t// this.on('message',\t\tthis.onMessage.bind(this));\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic save_config(): void {\n\t\tthis.logf.warn('%-15s %-15s %-10s %-50s', this.constructor.name, 'save_config()', '', 'will restart ...');\n\t\tthis.saveConfig = true;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tprotected async onReady(): Promise<void> { /* empty */ }\n\n\n\t/**\n\t *\n\t */\n\tprotected async onUnload(): Promise<void> { /* empty */ }\n\n\n\t/**\n\t *\n\t * @param cb\n\t * @returns\n\t */\n\tpublic async runExclusive<T>(cb: () => Promise<T>): Promise<T> {\n\t\treturn this.mutex.runExclusive(cb);\n\t}\n\n\n\t/**\n\t *\n\t * @param stateId\n\t * @param common\n\t */\n\tpublic async writeFolderObj(stateId: string, common: ioBroker.SettableFolderObject['common']): Promise<void> {\n\t\tconst obj: ioBroker.SettableFolderObject = {\n\t\t\t'type':\t\t\t'folder',\n\t\t\t'common':\t\tcommon,\n\t\t\t'native':\t\t{}\n\t\t};\n\t\tawait this.setForeignObject(stateId, obj);\n\t}\n\n\n\t/**\n\t *\n\t * @param stateId\n\t * @param common\n\t */\n\tpublic async writeDeviceObj(stateId: string, common: ioBroker.SettableDeviceObject['common']): Promise<void> {\n\t\tconst obj: ioBroker.SettableDeviceObject = {\n\t\t\t'type':\t\t\t'device',\n\t\t\t'common':\t\tcommon,\n\t\t\t'native':\t\t{}\n\t\t};\n\t\tawait this.setForeignObject(stateId, obj);\n\t}\n\n\n\t/**\n\t *\n\t * @param stateId\n\t * @param common\n\t */\n\tpublic async writeChannelObj(stateId: string, common: ioBroker.SettableChannelObject['common']): Promise<void> {\n\t\tconst obj: ioBroker.SettableChannelObject = {\n\t\t\t'type':\t\t\t'channel',\n\t\t\t'common':\t\tcommon,\n\t\t\t'native':\t\t{}\n\t\t};\n\t\tawait this.setForeignObject(stateId, obj);\n\t}\n\n\t/**\n\t *\n\t * @param stateId\n\t * @param common\n\t */\n\t//\n\tpublic async writeStateObj(stateId: string, opts: IoStateObj): Promise<ioBroker.StateObject> {\n\t\t// common defautls\n\t\tconst optsCommon = Object.assign({ 'role': 'value', 'read': true, 'write': false }, opts.common);\n\n\t\t// OldObj, NewObj types\n\t\tinterface  OldObj { type: 'state', common: Partial<ioBroker.StateCommon>,\tnative: Record<string, unknown> }\n\t\tinterface  NewObj { type: 'state', common:         ioBroker.StateCommon,\tnative: Record<string, unknown> }\n\n\t\t// oldObj, newObj\n\t\tconst oldObj: OldObj = { 'type': 'state',\t'common': {},\t\t\t'native':                {} };\n\t\tconst newObj: NewObj = { 'type': 'state',\t'common': optsCommon,\t'native': opts.native ?? {}\t};\n\n\t\t// read existing state object\n\t\tlet stateObj = await this.getForeignObjectAsync(stateId);\n\t\tif (stateObj) {\n\t\t\tObject.assign(oldObj.common, stateObj.common);\n\t\t\tObject.assign(oldObj.native, stateObj.native);\n\t\t}\n\n\t\t// update history in newObj.common.custom\t\t-\t\tsee https://github.com/ioBroker/ioBroker.sql/blob/master/main.js\n\t\t// FIXME: will overwrite existing history settings\n\t\tif (this.historyId) {\n\t\t\t// add history from opts.history to newObj.common.custom\n\t\t\tconst optsHistory = opts.history ?? { enabled: false };\n\t\t\tif (optsHistory.enabled) {\n\t\t\t\tconst newCustom  = newObj.common.custom = newObj.common.custom ?? {};\n\t\t\t\tconst newHistory = newCustom[this.historyId] as (HistoryObj | undefined) ?? { 'enabled': false };\n\t\t\t\tnewCustom[this.historyId] = Object.assign(newHistory, optsHistory, {\n\t\t\t\t\t//\t'storageType':\t\t\t\t\t\t(common.type[0] || '').toUpperCase() + common.type.slice(1),\n\t\t\t\t\t//\t'storageType':\t\t\t\t\t\t'',\n\t\t\t\t\t//\t'maxLength':\t0,\n\t\t\t\t\t//\t'retention':\t0,\t\t\t\t\t// [s]\n\t\t\t\t\t//\t'changesOnly': true,\n\t\t\t\t\t//\t'changesRelogInterval': 0,\n\t\t\t\t\t//\t'changesMinDelta': 0,\n\t\t\t\t\t//\t'ignoreBelowNumber': '',\n\t\t\t\t\t//\t'debounceTime': 0,\n\t\t\t\t\t//\t'blockTime': 0,\n\t\t\t\t\t//\t'changesRelogInterval': 0,\n\t\t\t\t\t//\t'enableDebugLogs': false,\n\t\t\t\t});\n\n\t\t\t// copy history from oldObj.common.custom to newObj.common.custom\n\t\t\t} else if (oldObj.common.custom) {\n\t\t\t\tconst oldCustom  = oldObj.common.custom;\n\t\t\t\tconst oldHistory = oldCustom[this.historyId] as (HistoryObj | undefined);\n\t\t\t\tif (oldHistory) {\n\t\t\t\t\tconst newCustom = newObj.common.custom = newObj.common.custom ?? {};\n\t\t\t\t\tnewCustom[this.historyId] = oldHistory;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// create new or update existing object\n\t\tconst oldStr = jsonStringify(oldObj, { space: 4 });\n\t\tconst newStr = jsonStringify(newObj, { space: 4 });\n\t\tif (! stateObj  ||  newStr !== oldStr) {\n\t\t\tthis.logf.debug('%-15s %-15s %-10s %-50s\\n%s', this.constructor.name, 'writeStateObj()', 'oldObj', stateId, oldStr);\n\t\t\tthis.logf.debug('%-15s %-15s %-10s %-50s\\n%s', this.constructor.name, 'writeStateObj()', 'newObj', stateId, newStr);\n\n\t\t\tawait this.setForeignObject(stateId, newObj);\n\t\t\tstateObj = await this.getForeignObjectAsync(stateId);\n\t\t}\n\n\t\t// return ioBroker.StateObject\n\t\tif (stateObj?.type !== 'state') {\n\t\t\tthrow new Error(`${this.constructor.name}: writeStateObj(): invalid stateObj`);\n\t\t}\n\t\treturn stateObj;\n\t}\n\n\n\t/**\n\t *\n\t * @param stateId\n\t * @returns\n\t */\n\tpublic async readStateObject(stateId: string): Promise<ioBroker.StateObject | null> {\n\t\tconst obj = await this.getForeignObjectAsync(stateId) ?? null;\t\t// return null instead of undefined\n\t\treturn (obj?.type === 'state') ? obj : null;\n\t}\n\n\n\t/**\n\t *\n\t * @param stateId\n\t * @param state\n\t */\n\tpublic async writeState(stateId: string, state: ioBroker.SettableState): Promise<void> {\n\t\t//this.logf.debug('%-15s %-15s %-10s %-50s %-25s %-3s %s', this.constructor.name, 'writeState()', '', stateId, this.dateStr(state.ts), (state.ack ? '' : 'cmd'), valStr(state.val));\n\t\tawait this.setForeignStateAsync(stateId, state);\n\t}\n\n\n\t/**\n\t *\n\t * @param stateId\n\t * @returns\n\t */\n\tpublic async readState(stateId: string): Promise<ioBroker.State | null> {\n\t\treturn (await this.getForeignStateAsync(stateId)) ?? null;\t\t\t// return null instead of undefined\n\t}\n\n\n\t/**\n\t *\n\t * @param spec\n\t */\n\tpublic async subscribe(spec: StateChangeOpts): Promise<void> {\n\t\t// add spec to stateChangeSpecs\n\t\tconst stateId\t= spec.stateId;\n\t\tconst specs\t\t= this.stateChangeSpecs[stateId] = this.stateChangeSpecs[stateId]  ??  [];\n\t\tconst len\t\t= specs.push(spec);\n\t\tthis.logf.debug('%-15s %-15s %-10s %-50s %-4s %s', this.constructor.name, 'subscribe()', `#${String(len - 1)}`, stateId, String('val' in spec ? spec.val : 'any'), ('ack' in spec ? (spec.ack ? 'ack' : 'cmd') : '*'));\n\t\tif (len === 1) {\n\t\t\tconst stateObj = await this.readStateObject(stateId);\n\t\t\tif (stateObj) {\n\t\t\t\tthis.stateObject[stateId] = stateObj;\n\t\t\t\tawait this.subscribeForeignStatesAsync(stateId);\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t *\n\t * @param spec\n\t */\n\tpublic async unsubscribe(spec: StateChangeOpts): Promise<void> {\n\t\t// remove spec from stateChangeSpecs\n\t\tconst stateId  = spec.stateId;\n\t\tconst specs\t\t= (this.stateChangeSpecs[stateId]  ??  []).filter((s) => (s !== spec));\n\t\tthis.stateChangeSpecs[stateId] = specs;\n\t\tthis.logf.debug('%-15s %-15s %-10s %-50s %-4s %s', this.constructor.name, 'unsubscribe()', `#${String(specs.length)}`, stateId, String('val' in spec ? spec.val : 'any'), ('ack' in spec ? (spec.ack ? 'ack' : 'cmd') : '*'));\n\t\tif (specs.length === 0) {\n\t\t\tawait this.unsubscribeForeignStatesAsync(stateId);\n\t\t}\n\t}\n\n\n\t/**\n\t *\n\t * @param spec\n\t */\n\tpublic async subscribeOnce(spec: StateChangeOpts): Promise<void> {\n\t\tconst cb = spec.cb;\n\t\tspec.cb = async (stateChange: StateChange) => {\n\t\t\tawait this.unsubscribe(spec);\n\t\t\tawait cb(stateChange);\n\t\t};\n\t\tawait this.subscribe(spec);\n\t}\n\n\n\t/**\n\t *\n\t * @param stateId\n\t * @param state\n\t */\n\tprivate async onChange(stateId: string, { val, ack, ts }: { val: ValType, ack: boolean, ts: number }): Promise<void> {\n\t\t// call callbacks if opts do match\n\t\tconst specs = this.stateChangeSpecs[stateId];\n\t\tif (! specs) {\n\t\t\tthis.logf.error('%-15s %-15s %-10s %-50s %s   %-3s %s', this.constructor.name, 'onChange()', 'no spec', stateId, dateStr(ts), (ack ? '' : 'cmd'), valStr(val));\n\n\t\t} else {\n\t\t\tfor (const spec of specs) {\n\t\t\t\tconst valMatch = ('val' in spec) ? (spec.val === val) : true;\n\t\t\t\tconst ackMatch = ('ack' in spec) ? (spec.ack === ack) : true;\n\t\t\t\tif (valMatch  &&  ackMatch) {\n\t\t\t\t\tawait spec.cb({ val, ack, ts });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["_a", "jsonStringify"]
}
