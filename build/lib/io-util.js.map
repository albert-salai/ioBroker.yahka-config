{
  "version": 3,
  "sources": ["../../../ioBroker.io-lib/src/io-util.ts"],
  "sourcesContent": ["import { IoAdapter }\t\tfrom './io-adapter';\nimport   nj\t\t\t\t\tfrom 'numjs';\n\n\n// sortBy(key)\nexport function sortBy<T>(key: keyof T): ((a: T, b: T) => number) {\n\treturn (a: T, b: T) => (a[key] > b[key]) ? +1 : ((a[key] < b[key]) ? -1 : 0);\n}\n\n\n\n/**\n *\n * @param x\n * @param y\n * @returns\n */\nexport function parabola(x: [ number, number, number ], y: [ number, number, number ]): { a: number, b: number, c: number } {\n\t// y(x) = a x^2 + b x + c\n\tconst xx0 = x[0] * x[0];\n\tconst xx1 = x[1] * x[1];\n\tconst xx2 = x[2] * x[2];\n\tconst y10 = y[1] - y[0];\n\tconst y20 = y[2] - y[0];\n\tconst y21 = y[2] - y[1];\n\tconst x10 = x[1] - x[0];\n\tconst x20 = x[2] - x[0];\n\tconst x21 = x[2] - x[1];\n\tconst den = x10 * x20 * x21;\n\treturn {\n\t\t'a':\t(-x[0]*y21 + x[1]*y20 - x[2]*y10)\t\t\t\t\t\t\t\t\t\t\t\t\t/ den,\n\t\t'b':\t( xx0 *y21 - xx1 *y20 + xx2 *y10) \t\t\t\t\t\t\t\t\t\t\t\t\t/ den,\n\t\t'c':\t(-xx0 *(x[1]*y[2] - x[2]*y[1]) - x[0] * (xx2*y[1] - xx1*y[2]) + x[1]*x[2]*x21*y[0])\t/ den\n\t};\n}\n\n\n\n\n\n// Magnus\nexport class Magnus {\n\tprivate a\t= 17.62;\t\t// see https://library.wmo.int/viewer/68695/download?file=8_I-2023_en.pdf&type=pdf&navigator=1\n\tprivate b\t= 243.12;\t\t// Guide to Instruments and Methods of Observation - Volume I - Measurement of Meteorological VariablesGuide to Meteorological Instruments and Methods of Observation\n\tprivate c\t= 6.112;\t\t// ANNEX 4.B. FORMULAE FOR THE COMPUTATION OF MEASURES OF HUMIDITY, page 198, equation 4.B.1\n\n\t// sdd(T)\n\tsdd(T: number): number {\t\t\t\t\t\t// S\u00E4ttigungsdampfdruck in hPa\n\t\tconst { a, b, c } = this;\n\t\treturn c * Math.exp(a*T / (b + T));\t\t\t// sdd := c * e^(a*T / (b + T))\n\t}\n\n\t// dd(T, rh)\n\tdd(T: number, rh: number): number {\t\t\t\t// Dampfdruck in hPa\n\t\treturn rh/100 * this.sdd(T);\t\t\t\t// dd := rh/100 * sdd\n\t}\n\n\t// td(T, rh)\n\ttd(T: number, rh: number): number {\t\t\t\t// TD = Taupunkttemperatur in \u00B0C\n\t\tconst { a, b, c } = this;\n\t\tconst sdd = this.dd(T, rh);\t\t\t\t\t// sdd := dd\n\t\tconst v = Math.log(sdd / c);\t\t\t\t// v   := ln(sdd / c);\n\t\treturn b*v / (a - v);\t\t\t\t\t\t// T    = b*v / (a - v)\n\t}\n};\n\n\n\n// ~~~\n// IIR\n// ~~~\nexport class IIR {\n\tpublic\tb:\tnumber[];\n\tpublic\ta:\tnumber[];\n\tprivate\tw:\t(number | null)[];\n\n\t/**\n\t *\n\t * @param opts\n\t */\n\tconstructor(opts: { b: number[], a: number[] }) {\n\t\t//IoAdapter.logf.debug('%-15s %-15s %-10s:\\n%s', this.constructor.name, 'constructor()', 'opts', JSON.stringify(opts, null, 4));\n\t\tif (Array.isArray(opts.b)  &&  Array.isArray(opts.a)  &&  opts.b.length === opts.a.length  &&  opts.a.length > 0  &&  opts.a[0] !== undefined) {\n\t\t\tconst a0 = opts.a[0];\n\t\t\tthis.b\t = opts.b.map((b) => b/a0);\n\t\t\tthis.a\t = opts.a.map((a) => a/a0);\t\t\t\t\t\t// a[0] := 1\n\t\t\tthis.w\t = Array<null>(this.a.length).fill(null);\t\t// w[i] := null\n\t\t\t//IoAdapter.this.IoAdapter.logf.debug('%-15s %-15s %-10s %-50s', this.constructor.name, 'constructor()', 'b', JSON.stringify(this.b, null, 4));\n\t\t\t//IoAdapter.this.IoAdapter.logf.debug('%-15s %-15s %-10s %-50s', this.constructor.name, 'constructor()', 'a', JSON.stringify(this.a, null, 4));\n\n\t\t} else {\n\t\t\tthrow new Error(`${this.constructor.name}: constructor(): invalid config ${JSON.stringify(opts)}`);\n\t\t}\n\t}\n\n\n\t/**\n\t *\n\t * @param x_0\n\t * @returns\n\t */\n\tnext(x_0: number): number {\n\t\t// init\n\t\tif (this.w[0] === null) {\n\t\t\tconst a_sum = this.a.reduce((sum, a_i) => (sum + a_i), 0);\n\t\t\tthis.w.fill(x_0 / a_sum);\n\t\t}\n\n\t\t// insert w[0] := x[0] - [ a[1]*w[1] + a[2]*w[2] + ... ]\n\t\tthis.w.unshift(0);\n\t\tthis.w[0]  = this.a.reduce((acc, a_i, i) => (acc - a_i*(this.w[i] ?? 0)), x_0);\n\t\tthis.w.pop();\t\t\t// remove last w\n\n\t\t// y[0] := b[0]*w[0] + b[1]*w[1] + b[2]*w[2]\n\t\tconst  y_0 = this.b.reduce((acc, b_i, i) => (acc + b_i*(this.w[i] ?? 0)), 0);\n\t\treturn y_0;\n\t}\n}\n\n\n\n/**\n *\n * @param f\n * @param x0\n * @param options\n * @returns\n */\n// see\thttps://github.com/scijs/newton-raphson-method#readme\nexport function newtonRaphson(f: (x: number) => number, x0: number, options: {\n\tfp?:\t\t\t(x: number) => number,\n\th?:\t\t\t\tnumber,\n\ttolerance?:\t\tnumber,\n\tepsilon?:\t\tnumber,\n\tmaxIter?:\t\tnumber,\n\txMin?:\t\t\tnumber,\n\txMax?:\t\t\tnumber,\n\tverbose?:\t\tboolean,\n}): number | false {\n\t// options\n\tconst tolerance\t\t= (options.tolerance\t?? 1e-9\t\t\t\t);\n\tconst epsilon\t\t= (options.epsilon\t\t?? 1e-16\t\t\t);\n\tconst maxIter\t\t= (options.maxIter\t\t?? 20\t\t\t\t);\n\tconst h\t\t\t\t= (options.h\t\t\t?? 1e-4\t\t\t\t);\n\tconst verbose\t\t= (options.verbose\t\t?? false\t\t\t);\n\tconst xMin\t\t\t= (options.xMin\t\t\t?? Number.MIN_VALUE\t) + (options.fp ? 0 : (2*h + tolerance));\n\tconst xMax\t\t\t= (options.xMax\t\t\t?? Number.MAX_VALUE\t) - (options.fp ? 0 : (2*h + tolerance));\n\n\tconst hr = 1 / h;\n\tlet iter = 0;\n\twhile (iter++ < maxIter) {\n\t\t// compute the value of the function\n\t\tconst y = f(x0);\n\n\t\t// yp: derivative at x0\n\t\tlet yp: number;\n\t\tif (options.fp) {\n\t\t\typ = options.fp(x0);\n\t\t} else {\n\t\t\tconst yph  = f(x0 +   h);\n\t\t\tconst ymh  = f(x0 -   h);\n\t\t\tconst yp2h = f(x0 + 2*h);\n\t\t\tconst ym2h = f(x0 - 2*h);\n\t\t\typ = ((ym2h - yp2h) + 8*(yph - ymh)) * hr / 12;\n\t\t}\n\n\t\t// check for badly conditioned update (extremely small first deriv relative to function):\n\t\tif (Math.abs(yp) <= epsilon * Math.abs(y)) {\n\t\t\tIoAdapter.logf.error('Newton-Raphson: failed to converged due to nearly zero first derivative');\n\t\t\treturn false;\n\t\t}\n\n\t\t// update the guess\n\t\tconst x1 = Math.max(xMin, Math.min(xMax, x0 - y/yp));\t\t// xMin <= x1 <= xMax\n\n\t\t// Check for convergence:\n\t\tif (Math.abs(x1 - x0) <= tolerance * Math.abs(x1)) {\n\t\t\tif (verbose) {\n\t\t\t\tIoAdapter.logf.debug('Newton-Raphson: converged to x = ' + String(x1) + ' after ' + String(iter) + ' iterations');\n\t\t\t}\n\t\t\treturn x1;\n\t\t}\n\n\t\t// transfer update to the new guess\n\t\tx0 = x1;\n\t}\n\n\tIoAdapter.logf.warn('Newton-Raphson: Maximum iterations reached (' + String(maxIter) + ')');\n\treturn false;\n}\n\n\n\n/**\n *\n */\nexport class RLS {\n\tprivate dimensions\t\t\t\t= 1;\t\t\t\t\t\t\t\t\t// Number of features\n\tprivate lambda\t\t\t\t\t= 0.95;\t\t\t\t\t\t\t\t\t// Forgetting\t\t\tfactor\n\tprivate eye:\t\tnj.NdArray\t= nj.identity(this.dimensions);\t\t\t// Identity\t\t\t\tmatrix\n\tprivate w_hat:\t\tnj.NdArray\t= nj.zeros(this.dimensions);\t\t\t// Estimated Parameters\tvector\n\tprivate P:\t\t\tnj.NdArray\t= this.eye.multiply(1);\t\t\t\t\t// Covariance\t\t\tmatrix\n\n\t/**\n\t *\n\t * @param w\n\t * @param delta\n\t * @param lambda\n\t */\n\tpublic init(w: number[], lambda: number, P: number|number[][]): void {\n\t\tthis.dimensions\t= w.length;\n\t\tthis.lambda\t\t= lambda;\n\t\tthis.eye\t\t= nj.identity(this.dimensions);\n\t\tthis.w_hat\t\t= nj.array(w).reshape(this.dimensions, 1);\t\t\t// parameter estimate column vector\n\t\tIoAdapter.logf.debug('%-15s %-15s %-10s %s', this.constructor.name, 'init()', 'eye',\tJSON.stringify(this.eye\t\t));\n\t\tIoAdapter.logf.debug('%-15s %-15s %-10s %s', this.constructor.name, 'init()', 'w_hat',\tJSON.stringify(this.w_hat\t));\n\n\t\tif (typeof P === 'number') {\n\t\t\tthis.P = this.eye.multiply(P);\n\t\t} else if (P[0]) {\n\t\t\tthis.P = nj.array(P.flat()).reshape(P.length, P[0].length);\n\t\t}\n\t\tIoAdapter.logf.debug('%-15s %-15s %-10s %s', this.constructor.name, 'init()', 'P',\t\tJSON.stringify(this.P\t\t));\n\t}\n\n\t// Update the model with new data\n\tpublic update(x_vals: number[], y_val: number): number[] {\n\t\t// https://en.wikipedia.org/wiki/Recursive_least_squares_filter\n\t\tconst x\t\t= nj.array(x_vals).reshape(this.dimensions, 1);\t\t// input column vector\n\t\tconst xT\t= x.T;\t\t\t\t\t\t\t\t\t\t\t\t// input row    vector\n\n\t\t// get y_err\n\t\tconst y_hat:\tnumber\t\t= xT.dot(this.w_hat).get(0, 0);\n\t\tconst y_err:\tnumber\t\t= y_val - y_hat;\n\n\t\t// get Kalman gain column vector g := P x / (lambda + xT P x)\n\t\tconst xT_P:\t\tnj.NdArray\t= xT.dot(this.P);\t\t\t\t\t\t\t\t\t\t// row    vector\n\t\tconst x_xT_P:\tnj.NdArray\t= x.dot(xT_P);\t\t\t\t\t\t\t\t\t\t\t// matrix\n\t\tconst xT_P_x:\tnumber\t\t= xT_P.dot(x).get(0, 0);\t\t\t\t\t\t\t\t// number\n\t\tconst P_x:\t\tnj.NdArray\t= this.P.dot(x);\t\t\t\t\t\t\t\t\t\t// column vector\n\t\tconst gain:\t\tnj.NdArray\t= P_x.multiply(1/(this.lambda + xT_P_x));\t\t\t\t// column vector\n\n\t\t// update Covariance Matrix\t\tP <-- 1/lambda (P - (P x xT P)/(lambda + xT P x))\n\t\t//\t\t\t\t\t\t\t\tP <-- P (I - (x xT P)/(lambda + xT P x)) 1/lambda\n\t\tthis.P = this.P.dot(this.eye.subtract(x_xT_P)).multiply(1/(this.lambda + xT_P_x));\n\n\t\t// update Parameter estimate w_hat += y_err gain\n\t\tthis.w_hat.add(gain.multiply(y_err), false);\n\n\t\t/*\n\t\tIoAdapter.this.IoAdapter.logf.debug('%-15s %-15s %-10s %-50s', this.constructor.name, 'update()', 'P',\t\tJSON.stringify(this.P\t\t));\n\t\tIoAdapter.this.IoAdapter.logf.debug('%-15s %-15s %-10s %-50s', this.constructor.name, 'update()', 'x', \t\tJSON.stringify(x\t\t\t));\n\t\tIoAdapter.this.IoAdapter.logf.debug('%-15s %-15s %-10s %-50s', this.constructor.name, 'update()', 'xT',\t\tJSON.stringify(xT\t\t\t));\n\t\tIoAdapter.this.IoAdapter.logf.debug('%-15s %-15s %-10s %-50s', this.constructor.name, 'update()', 'y_hat',\tJSON.stringify(y_hat\t\t));\n\t\tIoAdapter.this.IoAdapter.logf.debug('%-15s %-15s %-10s %-50s', this.constructor.name, 'update()', 'y_err',\tJSON.stringify(y_err\t\t));\n\t\tIoAdapter.this.IoAdapter.logf.debug('%-15s %-15s %-10s %-50s', this.constructor.name, 'update()', 'P_x',\t\tJSON.stringify(P_x\t\t\t));\n\t\tIoAdapter.this.IoAdapter.logf.debug('%-15s %-15s %-10s %-50s', this.constructor.name, 'update()', 'xT_P_x',\tJSON.stringify(xT_P_x\t\t));\n\t\tIoAdapter.this.IoAdapter.logf.debug('%-15s %-15s %-10s %-50s', this.constructor.name, 'update()', 'gain',\t\tJSON.stringify(gain\t\t\t));\n\t\tIoAdapter.this.IoAdapter.logf.debug('%-15s %-15s %-10s %-50s', this.constructor.name, 'update()', 'w_hat',\tJSON.stringify(this.w_hat\t));\n\t\t*/\n\t\treturn this.w_hat.reshape(this.dimensions).tolist();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["nj"]
}
